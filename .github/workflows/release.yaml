name: Release

on:
  push:
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+'

env:
  IMAGE_NAME: tiga
  GO_VERSION: "1.24.3"
  NODE_VERSION: "24"

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'ysicing' }}
    permissions:
      packages: write
      contents: write
    outputs:
      tag_name: ${{ steps.check_version.outputs.tag_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Docker hub Registry
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: ui/pnpm-lock.yaml

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: 'stable'
          cache: true

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check version
        id: check_version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Build frontend
        run: task web

      - name: Cross compile server binaries
        run: task cross-compile

      - name: Cross compile agent binaries
        run: task agent-cross

      - name: Package binaries
        run: |
          TAG_NAME=${{ steps.check_version.outputs.tag_name }}
          cd bin
          # Package server binaries
          tar czf tiga-linux-amd64-${TAG_NAME}.tar.gz tiga-amd64
          tar czf tiga-linux-arm64-${TAG_NAME}.tar.gz tiga-arm64
          # Package agent binaries
          tar czf tiga-agent-linux-amd64-${TAG_NAME}.tar.gz tiga-agent-linux-amd64
          tar czf tiga-agent-linux-arm64-${TAG_NAME}.tar.gz tiga-agent-linux-arm64
          tar czf tiga-agent-darwin-amd64-${TAG_NAME}.tar.gz tiga-agent-darwin-amd64
          tar czf tiga-agent-darwin-arm64-${TAG_NAME}.tar.gz tiga-agent-darwin-arm64
          zip tiga-agent-windows-amd64-${TAG_NAME}.zip tiga-agent-windows-amd64.exe
          zip tiga-agent-windows-arm64-${TAG_NAME}.zip tiga-agent-windows-arm64.exe
          cd ..

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.binary
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.check_version.outputs.tag_name }}
            ${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.check_version.outputs.tag_name }}
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          labels: runnumber=${{ github.run_id }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.check_version.outputs.tag_name }}
          name: Release ${{ steps.check_version.outputs.tag_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            bin/tiga-linux-amd64-${{ steps.check_version.outputs.tag_name }}.tar.gz
            bin/tiga-linux-arm64-${{ steps.check_version.outputs.tag_name }}.tar.gz
            bin/tiga-agent-linux-amd64-${{ steps.check_version.outputs.tag_name }}.tar.gz
            bin/tiga-agent-linux-arm64-${{ steps.check_version.outputs.tag_name }}.tar.gz
            bin/tiga-agent-darwin-amd64-${{ steps.check_version.outputs.tag_name }}.tar.gz
            bin/tiga-agent-darwin-arm64-${{ steps.check_version.outputs.tag_name }}.tar.gz
            bin/tiga-agent-windows-amd64-${{ steps.check_version.outputs.tag_name }}.zip
            bin/tiga-agent-windows-arm64-${{ steps.check_version.outputs.tag_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
