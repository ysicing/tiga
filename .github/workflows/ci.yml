name: CI

permissions:
  contents: read
  issues: write
  pull-requests: write
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
    paths:
      - "**/*.go"
      - "**/*.ts"
      - "**/*.tsx"
      - "**/*.css"
      - "go.mod"
      - "ui/package.json"
      - "ui/vite.config.ts"
      - "ui/tsconfig*.json"
      - "ui/eslint.config.js"
      - "Dockerfile*"
  pull_request:
    branches: [main]
    paths:
      - "**/*.go"
      - "**/*.ts"
      - "**/*.tsx"
      - "**/*.css"
      - ".github/workflows/ci.yml"
      - "go.mod"
      - "ui/package.json"
      - "ui/vite.config.ts"
      - "ui/tsconfig*.json"
      - "ui/eslint.config.js"
      - "Dockerfile*"

env:
  GO_VERSION: "1.24.3"
  NODE_VERSION: "24"

jobs:
  ci:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: ui/pnpm-lock.yaml

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version: 'stable'
          cache: true

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint
        run: task lint

      - name: Build
        run: task backend

      - name: Test with Coverage
        run: task test-integration

      - name: Check Coverage Threshold
        run: |
          coverage=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "Total coverage: $coverage%"
          if (( $(echo "$coverage < 15" | bc -l) )); then
            echo "❌ Coverage ($coverage%) is below 15% threshold!"
            exit 1
          else
            echo "✅ Coverage ($coverage%) meets the 15% threshold"
          fi

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
