// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/host_monitor.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 主机硬件信息
type HostInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Platform        string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`                                      // 操作系统平台(linux/windows/darwin)
	PlatformVersion string                 `protobuf:"bytes,2,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"` // 平台版本(Ubuntu 22.04)
	Arch            string                 `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"`                                              // CPU架构(amd64/arm64)
	Virtualization  string                 `protobuf:"bytes,4,opt,name=virtualization,proto3" json:"virtualization,omitempty"`                          // 虚拟化类型(kvm/vmware/none)
	CpuModel        string                 `protobuf:"bytes,5,opt,name=cpu_model,json=cpuModel,proto3" json:"cpu_model,omitempty"`                      // CPU型号
	CpuCores        int32                  `protobuf:"varint,6,opt,name=cpu_cores,json=cpuCores,proto3" json:"cpu_cores,omitempty"`                     // CPU核心数
	MemTotal        uint64                 `protobuf:"varint,7,opt,name=mem_total,json=memTotal,proto3" json:"mem_total,omitempty"`                     // 总内存(字节)
	DiskTotal       uint64                 `protobuf:"varint,8,opt,name=disk_total,json=diskTotal,proto3" json:"disk_total,omitempty"`                  // 总磁盘(字节)
	SwapTotal       uint64                 `protobuf:"varint,9,opt,name=swap_total,json=swapTotal,proto3" json:"swap_total,omitempty"`                  // 总交换分区(字节)
	AgentVersion    string                 `protobuf:"bytes,10,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`         // Agent版本
	BootTime        int64                  `protobuf:"varint,11,opt,name=boot_time,json=bootTime,proto3" json:"boot_time,omitempty"`                    // 启动时间(Unix时间戳)
	SshEnabled      bool                   `protobuf:"varint,12,opt,name=ssh_enabled,json=sshEnabled,proto3" json:"ssh_enabled,omitempty"`              // SSH是否启用
	SshPort         int32                  `protobuf:"varint,13,opt,name=ssh_port,json=sshPort,proto3" json:"ssh_port,omitempty"`                       // SSH端口
	SshUser         string                 `protobuf:"bytes,14,opt,name=ssh_user,json=sshUser,proto3" json:"ssh_user,omitempty"`                        // SSH默认用户
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	mi := &file_proto_host_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *HostInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *HostInfo) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *HostInfo) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *HostInfo) GetVirtualization() string {
	if x != nil {
		return x.Virtualization
	}
	return ""
}

func (x *HostInfo) GetCpuModel() string {
	if x != nil {
		return x.CpuModel
	}
	return ""
}

func (x *HostInfo) GetCpuCores() int32 {
	if x != nil {
		return x.CpuCores
	}
	return 0
}

func (x *HostInfo) GetMemTotal() uint64 {
	if x != nil {
		return x.MemTotal
	}
	return 0
}

func (x *HostInfo) GetDiskTotal() uint64 {
	if x != nil {
		return x.DiskTotal
	}
	return 0
}

func (x *HostInfo) GetSwapTotal() uint64 {
	if x != nil {
		return x.SwapTotal
	}
	return 0
}

func (x *HostInfo) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *HostInfo) GetBootTime() int64 {
	if x != nil {
		return x.BootTime
	}
	return 0
}

func (x *HostInfo) GetSshEnabled() bool {
	if x != nil {
		return x.SshEnabled
	}
	return false
}

func (x *HostInfo) GetSshPort() int32 {
	if x != nil {
		return x.SshPort
	}
	return 0
}

func (x *HostInfo) GetSshUser() string {
	if x != nil {
		return x.SshUser
	}
	return ""
}

// 主机实时监控状态
type HostState struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Timestamp        int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                          // 时间戳(Unix毫秒)
	CpuUsage         float64                `protobuf:"fixed64,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`                           // CPU使用率(%)
	Load_1           float64                `protobuf:"fixed64,3,opt,name=load_1,json=load1,proto3" json:"load_1,omitempty"`                                    // 1分钟负载
	Load_5           float64                `protobuf:"fixed64,4,opt,name=load_5,json=load5,proto3" json:"load_5,omitempty"`                                    // 5分钟负载
	Load_15          float64                `protobuf:"fixed64,5,opt,name=load_15,json=load15,proto3" json:"load_15,omitempty"`                                 // 15分钟负载
	MemUsed          uint64                 `protobuf:"varint,6,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty"`                               // 已用内存(字节)
	MemUsage         float64                `protobuf:"fixed64,7,opt,name=mem_usage,json=memUsage,proto3" json:"mem_usage,omitempty"`                           // 内存使用率(%)
	SwapUsed         uint64                 `protobuf:"varint,8,opt,name=swap_used,json=swapUsed,proto3" json:"swap_used,omitempty"`                            // 已用交换分区(字节)
	DiskUsed         uint64                 `protobuf:"varint,9,opt,name=disk_used,json=diskUsed,proto3" json:"disk_used,omitempty"`                            // 已用磁盘(字节)
	DiskUsage        float64                `protobuf:"fixed64,10,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`                       // 磁盘使用率(%)
	NetInTransfer    uint64                 `protobuf:"varint,11,opt,name=net_in_transfer,json=netInTransfer,proto3" json:"net_in_transfer,omitempty"`          // 总入站流量(字节)
	NetOutTransfer   uint64                 `protobuf:"varint,12,opt,name=net_out_transfer,json=netOutTransfer,proto3" json:"net_out_transfer,omitempty"`       // 总出站流量(字节)
	NetInSpeed       uint64                 `protobuf:"varint,13,opt,name=net_in_speed,json=netInSpeed,proto3" json:"net_in_speed,omitempty"`                   // 入站速率(字节/秒)
	NetOutSpeed      uint64                 `protobuf:"varint,14,opt,name=net_out_speed,json=netOutSpeed,proto3" json:"net_out_speed,omitempty"`                // 出站速率(字节/秒)
	TcpConnCount     int32                  `protobuf:"varint,15,opt,name=tcp_conn_count,json=tcpConnCount,proto3" json:"tcp_conn_count,omitempty"`             // TCP连接数
	UdpConnCount     int32                  `protobuf:"varint,16,opt,name=udp_conn_count,json=udpConnCount,proto3" json:"udp_conn_count,omitempty"`             // UDP连接数
	ProcessCount     int32                  `protobuf:"varint,17,opt,name=process_count,json=processCount,proto3" json:"process_count,omitempty"`               // 进程数
	Uptime           int64                  `protobuf:"varint,18,opt,name=uptime,proto3" json:"uptime,omitempty"`                                               // 运行时间(秒)
	Temperatures     []*Temperature         `protobuf:"bytes,19,rep,name=temperatures,proto3" json:"temperatures,omitempty"`                                    // 温度传感器
	GpuUsage         float64                `protobuf:"fixed64,20,opt,name=gpu_usage,json=gpuUsage,proto3" json:"gpu_usage,omitempty"`                          // GPU使用率(%)
	TrafficSent      uint64                 `protobuf:"varint,21,opt,name=traffic_sent,json=trafficSent,proto3" json:"traffic_sent,omitempty"`                  // 总发送流量(字节)
	TrafficRecv      uint64                 `protobuf:"varint,22,opt,name=traffic_recv,json=trafficRecv,proto3" json:"traffic_recv,omitempty"`                  // 总接收流量(字节)
	TrafficDeltaSent uint64                 `protobuf:"varint,23,opt,name=traffic_delta_sent,json=trafficDeltaSent,proto3" json:"traffic_delta_sent,omitempty"` // 增量发送流量(字节)
	TrafficDeltaRecv uint64                 `protobuf:"varint,24,opt,name=traffic_delta_recv,json=trafficDeltaRecv,proto3" json:"traffic_delta_recv,omitempty"` // 增量接收流量(字节)
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HostState) Reset() {
	*x = HostState{}
	mi := &file_proto_host_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostState) ProtoMessage() {}

func (x *HostState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostState.ProtoReflect.Descriptor instead.
func (*HostState) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *HostState) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HostState) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *HostState) GetLoad_1() float64 {
	if x != nil {
		return x.Load_1
	}
	return 0
}

func (x *HostState) GetLoad_5() float64 {
	if x != nil {
		return x.Load_5
	}
	return 0
}

func (x *HostState) GetLoad_15() float64 {
	if x != nil {
		return x.Load_15
	}
	return 0
}

func (x *HostState) GetMemUsed() uint64 {
	if x != nil {
		return x.MemUsed
	}
	return 0
}

func (x *HostState) GetMemUsage() float64 {
	if x != nil {
		return x.MemUsage
	}
	return 0
}

func (x *HostState) GetSwapUsed() uint64 {
	if x != nil {
		return x.SwapUsed
	}
	return 0
}

func (x *HostState) GetDiskUsed() uint64 {
	if x != nil {
		return x.DiskUsed
	}
	return 0
}

func (x *HostState) GetDiskUsage() float64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *HostState) GetNetInTransfer() uint64 {
	if x != nil {
		return x.NetInTransfer
	}
	return 0
}

func (x *HostState) GetNetOutTransfer() uint64 {
	if x != nil {
		return x.NetOutTransfer
	}
	return 0
}

func (x *HostState) GetNetInSpeed() uint64 {
	if x != nil {
		return x.NetInSpeed
	}
	return 0
}

func (x *HostState) GetNetOutSpeed() uint64 {
	if x != nil {
		return x.NetOutSpeed
	}
	return 0
}

func (x *HostState) GetTcpConnCount() int32 {
	if x != nil {
		return x.TcpConnCount
	}
	return 0
}

func (x *HostState) GetUdpConnCount() int32 {
	if x != nil {
		return x.UdpConnCount
	}
	return 0
}

func (x *HostState) GetProcessCount() int32 {
	if x != nil {
		return x.ProcessCount
	}
	return 0
}

func (x *HostState) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *HostState) GetTemperatures() []*Temperature {
	if x != nil {
		return x.Temperatures
	}
	return nil
}

func (x *HostState) GetGpuUsage() float64 {
	if x != nil {
		return x.GpuUsage
	}
	return 0
}

func (x *HostState) GetTrafficSent() uint64 {
	if x != nil {
		return x.TrafficSent
	}
	return 0
}

func (x *HostState) GetTrafficRecv() uint64 {
	if x != nil {
		return x.TrafficRecv
	}
	return 0
}

func (x *HostState) GetTrafficDeltaSent() uint64 {
	if x != nil {
		return x.TrafficDeltaSent
	}
	return 0
}

func (x *HostState) GetTrafficDeltaRecv() uint64 {
	if x != nil {
		return x.TrafficDeltaRecv
	}
	return 0
}

// 温度传感器
type Temperature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                 // 传感器名称(CPU/Disk/GPU)
	Temperature   float64                `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"` // 温度(摄氏度)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Temperature) Reset() {
	*x = Temperature{}
	mi := &file_proto_host_monitor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Temperature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Temperature) ProtoMessage() {}

func (x *Temperature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Temperature.ProtoReflect.Descriptor instead.
func (*Temperature) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *Temperature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Temperature) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

// Agent注册请求
type RegisterAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                            // 主机UUID
	SecretKey     string                 `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"` // 密钥
	HostInfo      *HostInfo              `protobuf:"bytes,3,opt,name=host_info,json=hostInfo,proto3" json:"host_info,omitempty"`    // 主机硬件信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAgentRequest) Reset() {
	*x = RegisterAgentRequest{}
	mi := &file_proto_host_monitor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAgentRequest) ProtoMessage() {}

func (x *RegisterAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAgentRequest.ProtoReflect.Descriptor instead.
func (*RegisterAgentRequest) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterAgentRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RegisterAgentRequest) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *RegisterAgentRequest) GetHostInfo() *HostInfo {
	if x != nil {
		return x.HostInfo
	}
	return nil
}

// Agent注册响应
type RegisterAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                         // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                          // 消息
	ServerTime    int64                  `protobuf:"varint,3,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"` // 服务器时间(Unix时间戳)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAgentResponse) Reset() {
	*x = RegisterAgentResponse{}
	mi := &file_proto_host_monitor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAgentResponse) ProtoMessage() {}

func (x *RegisterAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAgentResponse.ProtoReflect.Descriptor instead.
func (*RegisterAgentResponse) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterAgentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterAgentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterAgentResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

// 上报状态请求
type ReportStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`   // 主机UUID
	State         *HostState             `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"` // 监控状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportStateRequest) Reset() {
	*x = ReportStateRequest{}
	mi := &file_proto_host_monitor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStateRequest) ProtoMessage() {}

func (x *ReportStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStateRequest.ProtoReflect.Descriptor instead.
func (*ReportStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{5}
}

func (x *ReportStateRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ReportStateRequest) GetState() *HostState {
	if x != nil {
		return x.State
	}
	return nil
}

// 上报状态响应
type ReportStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	Tasks         []*AgentTask           `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`      // 待执行任务
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportStateResponse) Reset() {
	*x = ReportStateResponse{}
	mi := &file_proto_host_monitor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStateResponse) ProtoMessage() {}

func (x *ReportStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStateResponse.ProtoReflect.Descriptor instead.
func (*ReportStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{6}
}

func (x *ReportStateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReportStateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReportStateResponse) GetTasks() []*AgentTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// Agent任务
type AgentTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                                                             // 任务ID
	TaskType      string                 `protobuf:"bytes,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`                                                       // 任务类型(terminal/probe/command)
	Params        map[string]string      `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 任务参数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentTask) Reset() {
	*x = AgentTask{}
	mi := &file_proto_host_monitor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTask) ProtoMessage() {}

func (x *AgentTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTask.ProtoReflect.Descriptor instead.
func (*AgentTask) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{7}
}

func (x *AgentTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *AgentTask) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *AgentTask) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

// 心跳请求
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`            // 主机UUID
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_host_monitor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{8}
}

func (x *HeartbeatRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *HeartbeatRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 心跳响应
type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                         // 是否成功
	ServerTime    int64                  `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"` // 服务器时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_host_monitor_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{9}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

// PTY终端I/O流数据
type IOStreamData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // 原始字节数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IOStreamData) Reset() {
	*x = IOStreamData{}
	mi := &file_proto_host_monitor_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IOStreamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOStreamData) ProtoMessage() {}

func (x *IOStreamData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOStreamData.ProtoReflect.Descriptor instead.
func (*IOStreamData) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{10}
}

func (x *IOStreamData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// 探测结果项(用于批量上报)
type ProbeResultItem struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ServiceMonitorId string                 `protobuf:"bytes,1,opt,name=service_monitor_id,json=serviceMonitorId,proto3" json:"service_monitor_id,omitempty"` // 服务监控ID
	Result           *ProbeResult           `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`                                               // 探测结果
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ProbeResultItem) Reset() {
	*x = ProbeResultItem{}
	mi := &file_proto_host_monitor_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeResultItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeResultItem) ProtoMessage() {}

func (x *ProbeResultItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeResultItem.ProtoReflect.Descriptor instead.
func (*ProbeResultItem) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{11}
}

func (x *ProbeResultItem) GetServiceMonitorId() string {
	if x != nil {
		return x.ServiceMonitorId
	}
	return ""
}

func (x *ProbeResultItem) GetResult() *ProbeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// Agent批量上报探测结果请求
type ReportProbeResultBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`       // Agent UUID
	Results       []*ProbeResultItem     `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"` // 探测结果列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportProbeResultBatchRequest) Reset() {
	*x = ReportProbeResultBatchRequest{}
	mi := &file_proto_host_monitor_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportProbeResultBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportProbeResultBatchRequest) ProtoMessage() {}

func (x *ReportProbeResultBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportProbeResultBatchRequest.ProtoReflect.Descriptor instead.
func (*ReportProbeResultBatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{12}
}

func (x *ReportProbeResultBatchRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ReportProbeResultBatchRequest) GetResults() []*ProbeResultItem {
	if x != nil {
		return x.Results
	}
	return nil
}

// Agent批量上报探测结果响应
type ReportProbeResultBatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`     // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`      // 消息
	Processed     int32                  `protobuf:"varint,3,opt,name=processed,proto3" json:"processed,omitempty"` // 成功处理的结果数量
	Failed        int32                  `protobuf:"varint,4,opt,name=failed,proto3" json:"failed,omitempty"`       // 失败的结果数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportProbeResultBatchResponse) Reset() {
	*x = ReportProbeResultBatchResponse{}
	mi := &file_proto_host_monitor_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportProbeResultBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportProbeResultBatchResponse) ProtoMessage() {}

func (x *ReportProbeResultBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_host_monitor_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportProbeResultBatchResponse.ProtoReflect.Descriptor instead.
func (*ReportProbeResultBatchResponse) Descriptor() ([]byte, []int) {
	return file_proto_host_monitor_proto_rawDescGZIP(), []int{13}
}

func (x *ReportProbeResultBatchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReportProbeResultBatchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReportProbeResultBatchResponse) GetProcessed() int32 {
	if x != nil {
		return x.Processed
	}
	return 0
}

func (x *ReportProbeResultBatchResponse) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

var File_proto_host_monitor_proto protoreflect.FileDescriptor

const file_proto_host_monitor_proto_rawDesc = "" +
	"\n" +
	"\x18proto/host_monitor.proto\x12\x05proto\x1a\x19proto/service_probe.proto\"\xbb\x03\n" +
	"\bHostInfo\x12\x1a\n" +
	"\bplatform\x18\x01 \x01(\tR\bplatform\x12)\n" +
	"\x10platform_version\x18\x02 \x01(\tR\x0fplatformVersion\x12\x12\n" +
	"\x04arch\x18\x03 \x01(\tR\x04arch\x12&\n" +
	"\x0evirtualization\x18\x04 \x01(\tR\x0evirtualization\x12\x1b\n" +
	"\tcpu_model\x18\x05 \x01(\tR\bcpuModel\x12\x1b\n" +
	"\tcpu_cores\x18\x06 \x01(\x05R\bcpuCores\x12\x1b\n" +
	"\tmem_total\x18\a \x01(\x04R\bmemTotal\x12\x1d\n" +
	"\n" +
	"disk_total\x18\b \x01(\x04R\tdiskTotal\x12\x1d\n" +
	"\n" +
	"swap_total\x18\t \x01(\x04R\tswapTotal\x12#\n" +
	"\ragent_version\x18\n" +
	" \x01(\tR\fagentVersion\x12\x1b\n" +
	"\tboot_time\x18\v \x01(\x03R\bbootTime\x12\x1f\n" +
	"\vssh_enabled\x18\f \x01(\bR\n" +
	"sshEnabled\x12\x19\n" +
	"\bssh_port\x18\r \x01(\x05R\asshPort\x12\x19\n" +
	"\bssh_user\x18\x0e \x01(\tR\asshUser\"\xb6\x06\n" +
	"\tHostState\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1b\n" +
	"\tcpu_usage\x18\x02 \x01(\x01R\bcpuUsage\x12\x15\n" +
	"\x06load_1\x18\x03 \x01(\x01R\x05load1\x12\x15\n" +
	"\x06load_5\x18\x04 \x01(\x01R\x05load5\x12\x17\n" +
	"\aload_15\x18\x05 \x01(\x01R\x06load15\x12\x19\n" +
	"\bmem_used\x18\x06 \x01(\x04R\amemUsed\x12\x1b\n" +
	"\tmem_usage\x18\a \x01(\x01R\bmemUsage\x12\x1b\n" +
	"\tswap_used\x18\b \x01(\x04R\bswapUsed\x12\x1b\n" +
	"\tdisk_used\x18\t \x01(\x04R\bdiskUsed\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\n" +
	" \x01(\x01R\tdiskUsage\x12&\n" +
	"\x0fnet_in_transfer\x18\v \x01(\x04R\rnetInTransfer\x12(\n" +
	"\x10net_out_transfer\x18\f \x01(\x04R\x0enetOutTransfer\x12 \n" +
	"\fnet_in_speed\x18\r \x01(\x04R\n" +
	"netInSpeed\x12\"\n" +
	"\rnet_out_speed\x18\x0e \x01(\x04R\vnetOutSpeed\x12$\n" +
	"\x0etcp_conn_count\x18\x0f \x01(\x05R\ftcpConnCount\x12$\n" +
	"\x0eudp_conn_count\x18\x10 \x01(\x05R\fudpConnCount\x12#\n" +
	"\rprocess_count\x18\x11 \x01(\x05R\fprocessCount\x12\x16\n" +
	"\x06uptime\x18\x12 \x01(\x03R\x06uptime\x126\n" +
	"\ftemperatures\x18\x13 \x03(\v2\x12.proto.TemperatureR\ftemperatures\x12\x1b\n" +
	"\tgpu_usage\x18\x14 \x01(\x01R\bgpuUsage\x12!\n" +
	"\ftraffic_sent\x18\x15 \x01(\x04R\vtrafficSent\x12!\n" +
	"\ftraffic_recv\x18\x16 \x01(\x04R\vtrafficRecv\x12,\n" +
	"\x12traffic_delta_sent\x18\x17 \x01(\x04R\x10trafficDeltaSent\x12,\n" +
	"\x12traffic_delta_recv\x18\x18 \x01(\x04R\x10trafficDeltaRecv\"C\n" +
	"\vTemperature\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vtemperature\x18\x02 \x01(\x01R\vtemperature\"w\n" +
	"\x14RegisterAgentRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x1d\n" +
	"\n" +
	"secret_key\x18\x02 \x01(\tR\tsecretKey\x12,\n" +
	"\thost_info\x18\x03 \x01(\v2\x0f.proto.HostInfoR\bhostInfo\"l\n" +
	"\x15RegisterAgentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vserver_time\x18\x03 \x01(\x03R\n" +
	"serverTime\"P\n" +
	"\x12ReportStateRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12&\n" +
	"\x05state\x18\x02 \x01(\v2\x10.proto.HostStateR\x05state\"q\n" +
	"\x13ReportStateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12&\n" +
	"\x05tasks\x18\x03 \x03(\v2\x10.proto.AgentTaskR\x05tasks\"\xb2\x01\n" +
	"\tAgentTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_type\x18\x02 \x01(\tR\btaskType\x124\n" +
	"\x06params\x18\x03 \x03(\v2\x1c.proto.AgentTask.ParamsEntryR\x06params\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"D\n" +
	"\x10HeartbeatRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\"N\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vserver_time\x18\x02 \x01(\x03R\n" +
	"serverTime\"\"\n" +
	"\fIOStreamData\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"k\n" +
	"\x0fProbeResultItem\x12,\n" +
	"\x12service_monitor_id\x18\x01 \x01(\tR\x10serviceMonitorId\x12*\n" +
	"\x06result\x18\x02 \x01(\v2\x12.proto.ProbeResultR\x06result\"e\n" +
	"\x1dReportProbeResultBatchRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x120\n" +
	"\aresults\x18\x02 \x03(\v2\x16.proto.ProbeResultItemR\aresults\"\x8a\x01\n" +
	"\x1eReportProbeResultBatchResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\tprocessed\x18\x03 \x01(\x05R\tprocessed\x12\x16\n" +
	"\x06failed\x18\x04 \x01(\x05R\x06failed2\x84\x03\n" +
	"\vHostMonitor\x12H\n" +
	"\vReportState\x12\x19.proto.ReportStateRequest\x1a\x1a.proto.ReportStateResponse(\x010\x01\x12J\n" +
	"\rRegisterAgent\x12\x1b.proto.RegisterAgentRequest\x1a\x1c.proto.RegisterAgentResponse\x12e\n" +
	"\x16ReportProbeResultBatch\x12$.proto.ReportProbeResultBatchRequest\x1a%.proto.ReportProbeResultBatchResponse\x12>\n" +
	"\tHeartbeat\x12\x17.proto.HeartbeatRequest\x1a\x18.proto.HeartbeatResponse\x128\n" +
	"\bIOStream\x12\x13.proto.IOStreamData\x1a\x13.proto.IOStreamData(\x010\x01B%Z#github.com/ysicing/tiga/proto;protob\x06proto3"

var (
	file_proto_host_monitor_proto_rawDescOnce sync.Once
	file_proto_host_monitor_proto_rawDescData []byte
)

func file_proto_host_monitor_proto_rawDescGZIP() []byte {
	file_proto_host_monitor_proto_rawDescOnce.Do(func() {
		file_proto_host_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_host_monitor_proto_rawDesc), len(file_proto_host_monitor_proto_rawDesc)))
	})
	return file_proto_host_monitor_proto_rawDescData
}

var file_proto_host_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_host_monitor_proto_goTypes = []any{
	(*HostInfo)(nil),                       // 0: proto.HostInfo
	(*HostState)(nil),                      // 1: proto.HostState
	(*Temperature)(nil),                    // 2: proto.Temperature
	(*RegisterAgentRequest)(nil),           // 3: proto.RegisterAgentRequest
	(*RegisterAgentResponse)(nil),          // 4: proto.RegisterAgentResponse
	(*ReportStateRequest)(nil),             // 5: proto.ReportStateRequest
	(*ReportStateResponse)(nil),            // 6: proto.ReportStateResponse
	(*AgentTask)(nil),                      // 7: proto.AgentTask
	(*HeartbeatRequest)(nil),               // 8: proto.HeartbeatRequest
	(*HeartbeatResponse)(nil),              // 9: proto.HeartbeatResponse
	(*IOStreamData)(nil),                   // 10: proto.IOStreamData
	(*ProbeResultItem)(nil),                // 11: proto.ProbeResultItem
	(*ReportProbeResultBatchRequest)(nil),  // 12: proto.ReportProbeResultBatchRequest
	(*ReportProbeResultBatchResponse)(nil), // 13: proto.ReportProbeResultBatchResponse
	nil,                                    // 14: proto.AgentTask.ParamsEntry
	(*ProbeResult)(nil),                    // 15: proto.ProbeResult
}
var file_proto_host_monitor_proto_depIdxs = []int32{
	2,  // 0: proto.HostState.temperatures:type_name -> proto.Temperature
	0,  // 1: proto.RegisterAgentRequest.host_info:type_name -> proto.HostInfo
	1,  // 2: proto.ReportStateRequest.state:type_name -> proto.HostState
	7,  // 3: proto.ReportStateResponse.tasks:type_name -> proto.AgentTask
	14, // 4: proto.AgentTask.params:type_name -> proto.AgentTask.ParamsEntry
	15, // 5: proto.ProbeResultItem.result:type_name -> proto.ProbeResult
	11, // 6: proto.ReportProbeResultBatchRequest.results:type_name -> proto.ProbeResultItem
	5,  // 7: proto.HostMonitor.ReportState:input_type -> proto.ReportStateRequest
	3,  // 8: proto.HostMonitor.RegisterAgent:input_type -> proto.RegisterAgentRequest
	12, // 9: proto.HostMonitor.ReportProbeResultBatch:input_type -> proto.ReportProbeResultBatchRequest
	8,  // 10: proto.HostMonitor.Heartbeat:input_type -> proto.HeartbeatRequest
	10, // 11: proto.HostMonitor.IOStream:input_type -> proto.IOStreamData
	6,  // 12: proto.HostMonitor.ReportState:output_type -> proto.ReportStateResponse
	4,  // 13: proto.HostMonitor.RegisterAgent:output_type -> proto.RegisterAgentResponse
	13, // 14: proto.HostMonitor.ReportProbeResultBatch:output_type -> proto.ReportProbeResultBatchResponse
	9,  // 15: proto.HostMonitor.Heartbeat:output_type -> proto.HeartbeatResponse
	10, // 16: proto.HostMonitor.IOStream:output_type -> proto.IOStreamData
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_host_monitor_proto_init() }
func file_proto_host_monitor_proto_init() {
	if File_proto_host_monitor_proto != nil {
		return
	}
	file_proto_service_probe_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_host_monitor_proto_rawDesc), len(file_proto_host_monitor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_host_monitor_proto_goTypes,
		DependencyIndexes: file_proto_host_monitor_proto_depIdxs,
		MessageInfos:      file_proto_host_monitor_proto_msgTypes,
	}.Build()
	File_proto_host_monitor_proto = out.File
	file_proto_host_monitor_proto_goTypes = nil
	file_proto_host_monitor_proto_depIdxs = nil
}
