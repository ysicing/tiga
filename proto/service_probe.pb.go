// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: proto/service_probe.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 探测类型
type ProbeType int32

const (
	ProbeType_HTTP ProbeType = 0 // HTTP/HTTPS探测
	ProbeType_TCP  ProbeType = 1 // TCP端口探测
	ProbeType_ICMP ProbeType = 2 // ICMP Ping探测
)

// Enum value maps for ProbeType.
var (
	ProbeType_name = map[int32]string{
		0: "HTTP",
		1: "TCP",
		2: "ICMP",
	}
	ProbeType_value = map[string]int32{
		"HTTP": 0,
		"TCP":  1,
		"ICMP": 2,
	}
)

func (x ProbeType) Enum() *ProbeType {
	p := new(ProbeType)
	*p = x
	return p
}

func (x ProbeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProbeType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_service_probe_proto_enumTypes[0].Descriptor()
}

func (ProbeType) Type() protoreflect.EnumType {
	return &file_proto_service_probe_proto_enumTypes[0]
}

func (x ProbeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProbeType.Descriptor instead.
func (ProbeType) EnumDescriptor() ([]byte, []int) {
	return file_proto_service_probe_proto_rawDescGZIP(), []int{0}
}

// 探测任务
type ProbeTask struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	TaskId   int64                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`    // 任务ID
	Type     ProbeType              `protobuf:"varint,2,opt,name=type,proto3,enum=proto.ProbeType" json:"type,omitempty"` // 探测类型
	Target   string                 `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`                   // 探测目标(URL/IP:Port/IP)
	Timeout  int32                  `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`                // 超时时间(秒)
	Interval int32                  `protobuf:"varint,5,opt,name=interval,proto3" json:"interval,omitempty"`              // 探测间隔(秒)
	// HTTP特定配置
	HttpMethod   string            `protobuf:"bytes,10,opt,name=http_method,json=httpMethod,proto3" json:"http_method,omitempty"`                                                                              // HTTP方法(GET/POST)
	HttpHeaders  map[string]string `protobuf:"bytes,11,rep,name=http_headers,json=httpHeaders,proto3" json:"http_headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // HTTP头
	HttpBody     string            `protobuf:"bytes,12,opt,name=http_body,json=httpBody,proto3" json:"http_body,omitempty"`                                                                                    // HTTP请求体
	ExpectStatus int32             `protobuf:"varint,13,opt,name=expect_status,json=expectStatus,proto3" json:"expect_status,omitempty"`                                                                       // 期望状态码
	ExpectBody   string            `protobuf:"bytes,14,opt,name=expect_body,json=expectBody,proto3" json:"expect_body,omitempty"`                                                                              // 期望响应体(包含字符串)
	// TCP特定配置
	TcpSend       string `protobuf:"bytes,20,opt,name=tcp_send,json=tcpSend,proto3" json:"tcp_send,omitempty"`       // TCP发送数据
	TcpExpect     string `protobuf:"bytes,21,opt,name=tcp_expect,json=tcpExpect,proto3" json:"tcp_expect,omitempty"` // TCP期望接收数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbeTask) Reset() {
	*x = ProbeTask{}
	mi := &file_proto_service_probe_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeTask) ProtoMessage() {}

func (x *ProbeTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_probe_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeTask.ProtoReflect.Descriptor instead.
func (*ProbeTask) Descriptor() ([]byte, []int) {
	return file_proto_service_probe_proto_rawDescGZIP(), []int{0}
}

func (x *ProbeTask) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ProbeTask) GetType() ProbeType {
	if x != nil {
		return x.Type
	}
	return ProbeType_HTTP
}

func (x *ProbeTask) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *ProbeTask) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ProbeTask) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *ProbeTask) GetHttpMethod() string {
	if x != nil {
		return x.HttpMethod
	}
	return ""
}

func (x *ProbeTask) GetHttpHeaders() map[string]string {
	if x != nil {
		return x.HttpHeaders
	}
	return nil
}

func (x *ProbeTask) GetHttpBody() string {
	if x != nil {
		return x.HttpBody
	}
	return ""
}

func (x *ProbeTask) GetExpectStatus() int32 {
	if x != nil {
		return x.ExpectStatus
	}
	return 0
}

func (x *ProbeTask) GetExpectBody() string {
	if x != nil {
		return x.ExpectBody
	}
	return ""
}

func (x *ProbeTask) GetTcpSend() string {
	if x != nil {
		return x.TcpSend
	}
	return ""
}

func (x *ProbeTask) GetTcpExpect() string {
	if x != nil {
		return x.TcpExpect
	}
	return ""
}

// 探测结果
type ProbeResult struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	TaskId       int64                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                  // 任务ID
	Timestamp    int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                          // 探测时间(Unix毫秒)
	Success      bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`                              // 是否成功
	Latency      int32                  `protobuf:"varint,4,opt,name=latency,proto3" json:"latency,omitempty"`                              // 延迟(毫秒)
	ErrorMessage string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // 错误信息
	// HTTP特定结果
	HttpStatusCode   int32  `protobuf:"varint,10,opt,name=http_status_code,json=httpStatusCode,proto3" json:"http_status_code,omitempty"`      // HTTP状态码
	HttpResponseBody string `protobuf:"bytes,11,opt,name=http_response_body,json=httpResponseBody,proto3" json:"http_response_body,omitempty"` // HTTP响应体(前1KB)
	// TCP特定结果
	TcpResponse   string `protobuf:"bytes,20,opt,name=tcp_response,json=tcpResponse,proto3" json:"tcp_response,omitempty"` // TCP响应数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbeResult) Reset() {
	*x = ProbeResult{}
	mi := &file_proto_service_probe_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeResult) ProtoMessage() {}

func (x *ProbeResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_probe_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeResult.ProtoReflect.Descriptor instead.
func (*ProbeResult) Descriptor() ([]byte, []int) {
	return file_proto_service_probe_proto_rawDescGZIP(), []int{1}
}

func (x *ProbeResult) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ProbeResult) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ProbeResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProbeResult) GetLatency() int32 {
	if x != nil {
		return x.Latency
	}
	return 0
}

func (x *ProbeResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ProbeResult) GetHttpStatusCode() int32 {
	if x != nil {
		return x.HttpStatusCode
	}
	return 0
}

func (x *ProbeResult) GetHttpResponseBody() string {
	if x != nil {
		return x.HttpResponseBody
	}
	return ""
}

func (x *ProbeResult) GetTcpResponse() string {
	if x != nil {
		return x.TcpResponse
	}
	return ""
}

// 探测任务请求
type ProbeTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // 主机UUID
	Task          *ProbeTask             `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"` // 探测任务
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbeTaskRequest) Reset() {
	*x = ProbeTaskRequest{}
	mi := &file_proto_service_probe_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeTaskRequest) ProtoMessage() {}

func (x *ProbeTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_probe_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeTaskRequest.ProtoReflect.Descriptor instead.
func (*ProbeTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_probe_proto_rawDescGZIP(), []int{2}
}

func (x *ProbeTaskRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ProbeTaskRequest) GetTask() *ProbeTask {
	if x != nil {
		return x.Task
	}
	return nil
}

// 探测结果响应
type ProbeResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 消息
	Result        *ProbeResult           `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`    // 探测结果
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbeResultResponse) Reset() {
	*x = ProbeResultResponse{}
	mi := &file_proto_service_probe_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeResultResponse) ProtoMessage() {}

func (x *ProbeResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_probe_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeResultResponse.ProtoReflect.Descriptor instead.
func (*ProbeResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_probe_proto_rawDescGZIP(), []int{3}
}

func (x *ProbeResultResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProbeResultResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProbeResultResponse) GetResult() *ProbeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_proto_service_probe_proto protoreflect.FileDescriptor

const file_proto_service_probe_proto_rawDesc = "" +
	"\n" +
	"\x19proto/service_probe.proto\x12\x05proto\"\xdc\x03\n" +
	"\tProbeTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x03R\x06taskId\x12$\n" +
	"\x04type\x18\x02 \x01(\x0e2\x10.proto.ProbeTypeR\x04type\x12\x16\n" +
	"\x06target\x18\x03 \x01(\tR\x06target\x12\x18\n" +
	"\atimeout\x18\x04 \x01(\x05R\atimeout\x12\x1a\n" +
	"\binterval\x18\x05 \x01(\x05R\binterval\x12\x1f\n" +
	"\vhttp_method\x18\n" +
	" \x01(\tR\n" +
	"httpMethod\x12D\n" +
	"\fhttp_headers\x18\v \x03(\v2!.proto.ProbeTask.HttpHeadersEntryR\vhttpHeaders\x12\x1b\n" +
	"\thttp_body\x18\f \x01(\tR\bhttpBody\x12#\n" +
	"\rexpect_status\x18\r \x01(\x05R\fexpectStatus\x12\x1f\n" +
	"\vexpect_body\x18\x0e \x01(\tR\n" +
	"expectBody\x12\x19\n" +
	"\btcp_send\x18\x14 \x01(\tR\atcpSend\x12\x1d\n" +
	"\n" +
	"tcp_expect\x18\x15 \x01(\tR\ttcpExpect\x1a>\n" +
	"\x10HttpHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x98\x02\n" +
	"\vProbeResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x03R\x06taskId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x18\n" +
	"\alatency\x18\x04 \x01(\x05R\alatency\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\x12(\n" +
	"\x10http_status_code\x18\n" +
	" \x01(\x05R\x0ehttpStatusCode\x12,\n" +
	"\x12http_response_body\x18\v \x01(\tR\x10httpResponseBody\x12!\n" +
	"\ftcp_response\x18\x14 \x01(\tR\vtcpResponse\"L\n" +
	"\x10ProbeTaskRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12$\n" +
	"\x04task\x18\x02 \x01(\v2\x10.proto.ProbeTaskR\x04task\"u\n" +
	"\x13ProbeResultResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12*\n" +
	"\x06result\x18\x03 \x01(\v2\x12.proto.ProbeResultR\x06result*(\n" +
	"\tProbeType\x12\b\n" +
	"\x04HTTP\x10\x00\x12\a\n" +
	"\x03TCP\x10\x01\x12\b\n" +
	"\x04ICMP\x10\x022W\n" +
	"\fServiceProbe\x12G\n" +
	"\fExecuteProbe\x12\x17.proto.ProbeTaskRequest\x1a\x1a.proto.ProbeResultResponse(\x010\x01B%Z#github.com/ysicing/tiga/proto;protob\x06proto3"

var (
	file_proto_service_probe_proto_rawDescOnce sync.Once
	file_proto_service_probe_proto_rawDescData []byte
)

func file_proto_service_probe_proto_rawDescGZIP() []byte {
	file_proto_service_probe_proto_rawDescOnce.Do(func() {
		file_proto_service_probe_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_service_probe_proto_rawDesc), len(file_proto_service_probe_proto_rawDesc)))
	})
	return file_proto_service_probe_proto_rawDescData
}

var file_proto_service_probe_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_service_probe_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_service_probe_proto_goTypes = []any{
	(ProbeType)(0),              // 0: proto.ProbeType
	(*ProbeTask)(nil),           // 1: proto.ProbeTask
	(*ProbeResult)(nil),         // 2: proto.ProbeResult
	(*ProbeTaskRequest)(nil),    // 3: proto.ProbeTaskRequest
	(*ProbeResultResponse)(nil), // 4: proto.ProbeResultResponse
	nil,                         // 5: proto.ProbeTask.HttpHeadersEntry
}
var file_proto_service_probe_proto_depIdxs = []int32{
	0, // 0: proto.ProbeTask.type:type_name -> proto.ProbeType
	5, // 1: proto.ProbeTask.http_headers:type_name -> proto.ProbeTask.HttpHeadersEntry
	1, // 2: proto.ProbeTaskRequest.task:type_name -> proto.ProbeTask
	2, // 3: proto.ProbeResultResponse.result:type_name -> proto.ProbeResult
	3, // 4: proto.ServiceProbe.ExecuteProbe:input_type -> proto.ProbeTaskRequest
	4, // 5: proto.ServiceProbe.ExecuteProbe:output_type -> proto.ProbeResultResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_service_probe_proto_init() }
func file_proto_service_probe_proto_init() {
	if File_proto_service_probe_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_service_probe_proto_rawDesc), len(file_proto_service_probe_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_service_probe_proto_goTypes,
		DependencyIndexes: file_proto_service_probe_proto_depIdxs,
		EnumInfos:         file_proto_service_probe_proto_enumTypes,
		MessageInfos:      file_proto_service_probe_proto_msgTypes,
	}.Build()
	File_proto_service_probe_proto = out.File
	file_proto_service_probe_proto_goTypes = nil
	file_proto_service_probe_proto_depIdxs = nil
}
