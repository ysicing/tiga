syntax = "proto3";

package proto;

option go_package = "github.com/ysicing/tiga/proto;proto";

// HostMonitor 主机监控服务
service HostMonitor {
  // ReportState Agent上报监控数据(双向流)
  rpc ReportState(stream ReportStateRequest) returns (stream ReportStateResponse);

  // RegisterAgent Agent注册
  rpc RegisterAgent(RegisterAgentRequest) returns (RegisterAgentResponse);

  // Heartbeat 心跳保持
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);

  // IOStream PTY终端I/O流(双向流)
  rpc IOStream(stream IOStreamData) returns (stream IOStreamData);
}

// 主机硬件信息
message HostInfo {
  string platform = 1;              // 操作系统平台(linux/windows/darwin)
  string platform_version = 2;      // 平台版本(Ubuntu 22.04)
  string arch = 3;                  // CPU架构(amd64/arm64)
  string virtualization = 4;        // 虚拟化类型(kvm/vmware/none)
  string cpu_model = 5;             // CPU型号
  int32 cpu_cores = 6;              // CPU核心数
  uint64 mem_total = 7;             // 总内存(字节)
  uint64 disk_total = 8;            // 总磁盘(字节)
  uint64 swap_total = 9;            // 总交换分区(字节)
  string agent_version = 10;        // Agent版本
  int64 boot_time = 11;             // 启动时间(Unix时间戳)
  bool ssh_enabled = 12;            // SSH是否启用
  int32 ssh_port = 13;              // SSH端口
  string ssh_user = 14;             // SSH默认用户
}

// 主机实时监控状态
message HostState {
  int64 timestamp = 1;              // 时间戳(Unix毫秒)
  double cpu_usage = 2;             // CPU使用率(%)
  double load_1 = 3;                // 1分钟负载
  double load_5 = 4;                // 5分钟负载
  double load_15 = 5;               // 15分钟负载
  uint64 mem_used = 6;              // 已用内存(字节)
  double mem_usage = 7;             // 内存使用率(%)
  uint64 swap_used = 8;             // 已用交换分区(字节)
  uint64 disk_used = 9;             // 已用磁盘(字节)
  double disk_usage = 10;           // 磁盘使用率(%)
  uint64 net_in_transfer = 11;      // 总入站流量(字节)
  uint64 net_out_transfer = 12;     // 总出站流量(字节)
  uint64 net_in_speed = 13;         // 入站速率(字节/秒)
  uint64 net_out_speed = 14;        // 出站速率(字节/秒)
  int32 tcp_conn_count = 15;        // TCP连接数
  int32 udp_conn_count = 16;        // UDP连接数
  int32 process_count = 17;         // 进程数
  int64 uptime = 18;                // 运行时间(秒)
  repeated Temperature temperatures = 19; // 温度传感器
  double gpu_usage = 20;            // GPU使用率(%)
  uint64 traffic_sent = 21;         // 总发送流量(字节)
  uint64 traffic_recv = 22;         // 总接收流量(字节)
  uint64 traffic_delta_sent = 23;   // 增量发送流量(字节)
  uint64 traffic_delta_recv = 24;   // 增量接收流量(字节)
}

// 温度传感器
message Temperature {
  string name = 1;                  // 传感器名称(CPU/Disk/GPU)
  double temperature = 2;           // 温度(摄氏度)
}

// Agent注册请求
message RegisterAgentRequest {
  string uuid = 1;                  // 主机UUID
  string secret_key = 2;            // 密钥
  HostInfo host_info = 3;           // 主机硬件信息
}

// Agent注册响应
message RegisterAgentResponse {
  bool success = 1;                 // 是否成功
  string message = 2;               // 消息
  int64 server_time = 3;            // 服务器时间(Unix时间戳)
}

// 上报状态请求
message ReportStateRequest {
  string uuid = 1;                  // 主机UUID
  HostState state = 2;              // 监控状态
}

// 上报状态响应
message ReportStateResponse {
  bool success = 1;                 // 是否成功
  string message = 2;               // 消息
  repeated AgentTask tasks = 3;     // 待执行任务
}

// Agent任务
message AgentTask {
  string task_id = 1;               // 任务ID
  string task_type = 2;             // 任务类型(terminal/probe/command)
  map<string, string> params = 3;   // 任务参数
}

// 心跳请求
message HeartbeatRequest {
  string uuid = 1;                  // 主机UUID
  int64 timestamp = 2;              // 时间戳
}

// 心跳响应
message HeartbeatResponse {
  bool success = 1;                 // 是否成功
  int64 server_time = 2;            // 服务器时间
}

// PTY终端I/O流数据
message IOStreamData {
  bytes data = 1;                   // 原始字节数据
                                     // Data格式:
                                     // - 0xff 0x05 0xff 0x05 + stream_id: 标识StreamID
                                     // - 0x00 + data: 终端输入数据
                                     // - 0x01 + json: 窗口大小调整 {"cols":80,"rows":24}
                                     // - 其他: 终端输出数据
}
