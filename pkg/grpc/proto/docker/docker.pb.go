// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: pkg/grpc/proto/docker/docker.proto

package docker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Docker daemon information
type GetDockerInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDockerInfoRequest) Reset() {
	*x = GetDockerInfoRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDockerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDockerInfoRequest) ProtoMessage() {}

func (x *GetDockerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDockerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetDockerInfoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{0}
}

type GetDockerInfoResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Version           string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ApiVersion        string                 `protobuf:"bytes,2,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	MinApiVersion     string                 `protobuf:"bytes,3,opt,name=min_api_version,json=minApiVersion,proto3" json:"min_api_version,omitempty"`
	GitCommit         string                 `protobuf:"bytes,4,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	GoVersion         string                 `protobuf:"bytes,5,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`
	Os                string                 `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`
	Arch              string                 `protobuf:"bytes,7,opt,name=arch,proto3" json:"arch,omitempty"`
	KernelVersion     string                 `protobuf:"bytes,8,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	StorageDriver     string                 `protobuf:"bytes,9,opt,name=storage_driver,json=storageDriver,proto3" json:"storage_driver,omitempty"`
	Containers        int32                  `protobuf:"varint,10,opt,name=containers,proto3" json:"containers,omitempty"`
	ContainersRunning int32                  `protobuf:"varint,11,opt,name=containers_running,json=containersRunning,proto3" json:"containers_running,omitempty"`
	ContainersPaused  int32                  `protobuf:"varint,12,opt,name=containers_paused,json=containersPaused,proto3" json:"containers_paused,omitempty"`
	ContainersStopped int32                  `protobuf:"varint,13,opt,name=containers_stopped,json=containersStopped,proto3" json:"containers_stopped,omitempty"`
	Images            int32                  `protobuf:"varint,14,opt,name=images,proto3" json:"images,omitempty"`
	MemTotal          int64                  `protobuf:"varint,15,opt,name=mem_total,json=memTotal,proto3" json:"mem_total,omitempty"`
	NCpu              int32                  `protobuf:"varint,16,opt,name=n_cpu,json=nCpu,proto3" json:"n_cpu,omitempty"`
	OperatingSystem   string                 `protobuf:"bytes,17,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetDockerInfoResponse) Reset() {
	*x = GetDockerInfoResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDockerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDockerInfoResponse) ProtoMessage() {}

func (x *GetDockerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDockerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetDockerInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{1}
}

func (x *GetDockerInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetDockerInfoResponse) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *GetDockerInfoResponse) GetMinApiVersion() string {
	if x != nil {
		return x.MinApiVersion
	}
	return ""
}

func (x *GetDockerInfoResponse) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *GetDockerInfoResponse) GetGoVersion() string {
	if x != nil {
		return x.GoVersion
	}
	return ""
}

func (x *GetDockerInfoResponse) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *GetDockerInfoResponse) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *GetDockerInfoResponse) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *GetDockerInfoResponse) GetStorageDriver() string {
	if x != nil {
		return x.StorageDriver
	}
	return ""
}

func (x *GetDockerInfoResponse) GetContainers() int32 {
	if x != nil {
		return x.Containers
	}
	return 0
}

func (x *GetDockerInfoResponse) GetContainersRunning() int32 {
	if x != nil {
		return x.ContainersRunning
	}
	return 0
}

func (x *GetDockerInfoResponse) GetContainersPaused() int32 {
	if x != nil {
		return x.ContainersPaused
	}
	return 0
}

func (x *GetDockerInfoResponse) GetContainersStopped() int32 {
	if x != nil {
		return x.ContainersStopped
	}
	return 0
}

func (x *GetDockerInfoResponse) GetImages() int32 {
	if x != nil {
		return x.Images
	}
	return 0
}

func (x *GetDockerInfoResponse) GetMemTotal() int64 {
	if x != nil {
		return x.MemTotal
	}
	return 0
}

func (x *GetDockerInfoResponse) GetNCpu() int32 {
	if x != nil {
		return x.NCpu
	}
	return 0
}

func (x *GetDockerInfoResponse) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

// Container listing
type ListContainersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	All           bool                   `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`                           // Include stopped containers
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                       // Limit number of results (0 = no limit)
	Filters       string                 `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`                    // Docker filters in JSON format
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`                         // Page number (starting from 1)
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // Items per page (default: 50)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersRequest) Reset() {
	*x = ListContainersRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersRequest) ProtoMessage() {}

func (x *ListContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersRequest.ProtoReflect.Descriptor instead.
func (*ListContainersRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{2}
}

func (x *ListContainersRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ListContainersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListContainersRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

func (x *ListContainersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListContainersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListContainersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Containers    []*Container           `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"` // Total number of containers matching filter
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersResponse) Reset() {
	*x = ListContainersResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersResponse) ProtoMessage() {}

func (x *ListContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersResponse.ProtoReflect.Descriptor instead.
func (*ListContainersResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{3}
}

func (x *ListContainersResponse) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *ListContainersResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListContainersResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListContainersResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Container struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Id            string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                          // Container ID (short 12 chars)
	Names         []string                  `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`                    // Container names
	Image         string                    `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`                    // Image name
	ImageId       string                    `protobuf:"bytes,4,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"` // Image ID
	Command       string                    `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`                // Command
	Created       int64                     `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`               // Creation timestamp
	State         string                    `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`                    // Container state (created, running, paused, etc.)
	Status        string                    `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`                  // Status description
	Ports         []*Port                   `protobuf:"bytes,9,rep,name=ports,proto3" json:"ports,omitempty"`                    // Port mappings
	Labels        map[string]string         `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SizeRw        int64                     `protobuf:"varint,11,opt,name=size_rw,json=sizeRw,proto3" json:"size_rw,omitempty"`               // Writable layer size
	SizeRootFs    int64                     `protobuf:"varint,12,opt,name=size_root_fs,json=sizeRootFs,proto3" json:"size_root_fs,omitempty"` // Total size
	Mounts        []*Mount                  `protobuf:"bytes,13,rep,name=mounts,proto3" json:"mounts,omitempty"`
	Networks      map[string]*NetworkConfig `protobuf:"bytes,14,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Container) Reset() {
	*x = Container{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{4}
}

func (x *Container) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Container) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Container) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *Container) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Container) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Container) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Container) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Container) GetPorts() []*Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Container) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Container) GetSizeRw() int64 {
	if x != nil {
		return x.SizeRw
	}
	return 0
}

func (x *Container) GetSizeRootFs() int64 {
	if x != nil {
		return x.SizeRootFs
	}
	return 0
}

func (x *Container) GetMounts() []*Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

func (x *Container) GetNetworks() map[string]*NetworkConfig {
	if x != nil {
		return x.Networks
	}
	return nil
}

type Port struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	PrivatePort   int32                  `protobuf:"varint,2,opt,name=private_port,json=privatePort,proto3" json:"private_port,omitempty"`
	PublicPort    int32                  `protobuf:"varint,3,opt,name=public_port,json=publicPort,proto3" json:"public_port,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"` // tcp/udp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Port) Reset() {
	*x = Port{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{5}
}

func (x *Port) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Port) GetPrivatePort() int32 {
	if x != nil {
		return x.PrivatePort
	}
	return 0
}

func (x *Port) GetPublicPort() int32 {
	if x != nil {
		return x.PublicPort
	}
	return 0
}

func (x *Port) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Mount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // bind, volume, tmpfs
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Destination   string                 `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Mode          string                 `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	Rw            bool                   `protobuf:"varint,5,opt,name=rw,proto3" json:"rw,omitempty"`
	Propagation   string                 `protobuf:"bytes,6,opt,name=propagation,proto3" json:"propagation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mount) Reset() {
	*x = Mount{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mount) ProtoMessage() {}

func (x *Mount) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mount.ProtoReflect.Descriptor instead.
func (*Mount) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{6}
}

func (x *Mount) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Mount) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Mount) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *Mount) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Mount) GetRw() bool {
	if x != nil {
		return x.Rw
	}
	return false
}

func (x *Mount) GetPropagation() string {
	if x != nil {
		return x.Propagation
	}
	return ""
}

type NetworkConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     string                 `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	EndpointId    string                 `protobuf:"bytes,2,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	Gateway       string                 `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	IpAddress     string                 `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	IpPrefixLen   int32                  `protobuf:"varint,5,opt,name=ip_prefix_len,json=ipPrefixLen,proto3" json:"ip_prefix_len,omitempty"`
	MacAddress    string                 `protobuf:"bytes,6,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConfig) Reset() {
	*x = NetworkConfig{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConfig) ProtoMessage() {}

func (x *NetworkConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkConfig.ProtoReflect.Descriptor instead.
func (*NetworkConfig) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{7}
}

func (x *NetworkConfig) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *NetworkConfig) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

func (x *NetworkConfig) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *NetworkConfig) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NetworkConfig) GetIpPrefixLen() int32 {
	if x != nil {
		return x.IpPrefixLen
	}
	return 0
}

func (x *NetworkConfig) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

// Get container details
type GetContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerRequest) Reset() {
	*x = GetContainerRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerRequest) ProtoMessage() {}

func (x *GetContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerRequest.ProtoReflect.Descriptor instead.
func (*GetContainerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{8}
}

func (x *GetContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type GetContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Container     *ContainerDetail       `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerResponse) Reset() {
	*x = GetContainerResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerResponse) ProtoMessage() {}

func (x *GetContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerResponse.ProtoReflect.Descriptor instead.
func (*GetContainerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{9}
}

func (x *GetContainerResponse) GetContainer() *ContainerDetail {
	if x != nil {
		return x.Container
	}
	return nil
}

type ContainerDetail struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	Id              string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created         int64                       `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Path            string                      `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Args            []string                    `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	State           *ContainerState             `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Image           string                      `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Name            string                      `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	RestartCount    int32                       `protobuf:"varint,8,opt,name=restart_count,json=restartCount,proto3" json:"restart_count,omitempty"`
	Config          *ContainerConfig            `protobuf:"bytes,9,opt,name=config,proto3" json:"config,omitempty"`
	HostConfig      *HostConfig                 `protobuf:"bytes,10,opt,name=host_config,json=hostConfig,proto3" json:"host_config,omitempty"`
	NetworkSettings map[string]*NetworkSettings `protobuf:"bytes,11,rep,name=network_settings,json=networkSettings,proto3" json:"network_settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Mounts          []*Mount                    `protobuf:"bytes,12,rep,name=mounts,proto3" json:"mounts,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ContainerDetail) Reset() {
	*x = ContainerDetail{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerDetail) ProtoMessage() {}

func (x *ContainerDetail) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerDetail.ProtoReflect.Descriptor instead.
func (*ContainerDetail) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{10}
}

func (x *ContainerDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerDetail) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ContainerDetail) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ContainerDetail) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ContainerDetail) GetState() *ContainerState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *ContainerDetail) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerDetail) GetRestartCount() int32 {
	if x != nil {
		return x.RestartCount
	}
	return 0
}

func (x *ContainerDetail) GetConfig() *ContainerConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ContainerDetail) GetHostConfig() *HostConfig {
	if x != nil {
		return x.HostConfig
	}
	return nil
}

func (x *ContainerDetail) GetNetworkSettings() map[string]*NetworkSettings {
	if x != nil {
		return x.NetworkSettings
	}
	return nil
}

func (x *ContainerDetail) GetMounts() []*Mount {
	if x != nil {
		return x.Mounts
	}
	return nil
}

type ContainerState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Running       bool                   `protobuf:"varint,2,opt,name=running,proto3" json:"running,omitempty"`
	Paused        bool                   `protobuf:"varint,3,opt,name=paused,proto3" json:"paused,omitempty"`
	Restarting    bool                   `protobuf:"varint,4,opt,name=restarting,proto3" json:"restarting,omitempty"`
	OomKilled     bool                   `protobuf:"varint,5,opt,name=oom_killed,json=oomKilled,proto3" json:"oom_killed,omitempty"`
	Dead          bool                   `protobuf:"varint,6,opt,name=dead,proto3" json:"dead,omitempty"`
	Pid           int32                  `protobuf:"varint,7,opt,name=pid,proto3" json:"pid,omitempty"`
	ExitCode      int32                  `protobuf:"varint,8,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Error         string                 `protobuf:"bytes,9,opt,name=error,proto3" json:"error,omitempty"`
	StartedAt     string                 `protobuf:"bytes,10,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	FinishedAt    string                 `protobuf:"bytes,11,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerState) Reset() {
	*x = ContainerState{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerState) ProtoMessage() {}

func (x *ContainerState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerState.ProtoReflect.Descriptor instead.
func (*ContainerState) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{11}
}

func (x *ContainerState) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ContainerState) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

func (x *ContainerState) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

func (x *ContainerState) GetRestarting() bool {
	if x != nil {
		return x.Restarting
	}
	return false
}

func (x *ContainerState) GetOomKilled() bool {
	if x != nil {
		return x.OomKilled
	}
	return false
}

func (x *ContainerState) GetDead() bool {
	if x != nil {
		return x.Dead
	}
	return false
}

func (x *ContainerState) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ContainerState) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ContainerState) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ContainerState) GetStartedAt() string {
	if x != nil {
		return x.StartedAt
	}
	return ""
}

func (x *ContainerState) GetFinishedAt() string {
	if x != nil {
		return x.FinishedAt
	}
	return ""
}

type ContainerConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Domainname    string                 `protobuf:"bytes,2,opt,name=domainname,proto3" json:"domainname,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	AttachStdin   bool                   `protobuf:"varint,4,opt,name=attach_stdin,json=attachStdin,proto3" json:"attach_stdin,omitempty"`
	AttachStdout  bool                   `protobuf:"varint,5,opt,name=attach_stdout,json=attachStdout,proto3" json:"attach_stdout,omitempty"`
	AttachStderr  bool                   `protobuf:"varint,6,opt,name=attach_stderr,json=attachStderr,proto3" json:"attach_stderr,omitempty"`
	ExposedPorts  map[string]bool        `protobuf:"bytes,7,rep,name=exposed_ports,json=exposedPorts,proto3" json:"exposed_ports,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Tty           bool                   `protobuf:"varint,8,opt,name=tty,proto3" json:"tty,omitempty"`
	OpenStdin     bool                   `protobuf:"varint,9,opt,name=open_stdin,json=openStdin,proto3" json:"open_stdin,omitempty"`
	StdinOnce     bool                   `protobuf:"varint,10,opt,name=stdin_once,json=stdinOnce,proto3" json:"stdin_once,omitempty"`
	Env           []string               `protobuf:"bytes,11,rep,name=env,proto3" json:"env,omitempty"`
	Cmd           []string               `protobuf:"bytes,12,rep,name=cmd,proto3" json:"cmd,omitempty"`
	Image         string                 `protobuf:"bytes,13,opt,name=image,proto3" json:"image,omitempty"`
	Volumes       map[string]bool        `protobuf:"bytes,14,rep,name=volumes,proto3" json:"volumes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	WorkingDir    string                 `protobuf:"bytes,15,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	Entrypoint    []string               `protobuf:"bytes,16,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,17,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerConfig) Reset() {
	*x = ContainerConfig{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerConfig) ProtoMessage() {}

func (x *ContainerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerConfig.ProtoReflect.Descriptor instead.
func (*ContainerConfig) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{12}
}

func (x *ContainerConfig) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ContainerConfig) GetDomainname() string {
	if x != nil {
		return x.Domainname
	}
	return ""
}

func (x *ContainerConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ContainerConfig) GetAttachStdin() bool {
	if x != nil {
		return x.AttachStdin
	}
	return false
}

func (x *ContainerConfig) GetAttachStdout() bool {
	if x != nil {
		return x.AttachStdout
	}
	return false
}

func (x *ContainerConfig) GetAttachStderr() bool {
	if x != nil {
		return x.AttachStderr
	}
	return false
}

func (x *ContainerConfig) GetExposedPorts() map[string]bool {
	if x != nil {
		return x.ExposedPorts
	}
	return nil
}

func (x *ContainerConfig) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

func (x *ContainerConfig) GetOpenStdin() bool {
	if x != nil {
		return x.OpenStdin
	}
	return false
}

func (x *ContainerConfig) GetStdinOnce() bool {
	if x != nil {
		return x.StdinOnce
	}
	return false
}

func (x *ContainerConfig) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ContainerConfig) GetCmd() []string {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *ContainerConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerConfig) GetVolumes() map[string]bool {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *ContainerConfig) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *ContainerConfig) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *ContainerConfig) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type HostConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuShares     int64                  `protobuf:"varint,1,opt,name=cpu_shares,json=cpuShares,proto3" json:"cpu_shares,omitempty"`
	Memory        int64                  `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	CgroupParent  string                 `protobuf:"bytes,3,opt,name=cgroup_parent,json=cgroupParent,proto3" json:"cgroup_parent,omitempty"`
	BlkioWeight   int32                  `protobuf:"varint,4,opt,name=blkio_weight,json=blkioWeight,proto3" json:"blkio_weight,omitempty"`
	PortBindings  []*PortBinding         `protobuf:"bytes,5,rep,name=port_bindings,json=portBindings,proto3" json:"port_bindings,omitempty"`
	RestartPolicy string                 `protobuf:"bytes,6,opt,name=restart_policy,json=restartPolicy,proto3" json:"restart_policy,omitempty"`
	NetworkMode   string                 `protobuf:"bytes,7,opt,name=network_mode,json=networkMode,proto3" json:"network_mode,omitempty"`
	Privileged    bool                   `protobuf:"varint,8,opt,name=privileged,proto3" json:"privileged,omitempty"`
	Binds         []string               `protobuf:"bytes,9,rep,name=binds,proto3" json:"binds,omitempty"`
	Dns           []string               `protobuf:"bytes,10,rep,name=dns,proto3" json:"dns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostConfig) Reset() {
	*x = HostConfig{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostConfig) ProtoMessage() {}

func (x *HostConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostConfig.ProtoReflect.Descriptor instead.
func (*HostConfig) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{13}
}

func (x *HostConfig) GetCpuShares() int64 {
	if x != nil {
		return x.CpuShares
	}
	return 0
}

func (x *HostConfig) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *HostConfig) GetCgroupParent() string {
	if x != nil {
		return x.CgroupParent
	}
	return ""
}

func (x *HostConfig) GetBlkioWeight() int32 {
	if x != nil {
		return x.BlkioWeight
	}
	return 0
}

func (x *HostConfig) GetPortBindings() []*PortBinding {
	if x != nil {
		return x.PortBindings
	}
	return nil
}

func (x *HostConfig) GetRestartPolicy() string {
	if x != nil {
		return x.RestartPolicy
	}
	return ""
}

func (x *HostConfig) GetNetworkMode() string {
	if x != nil {
		return x.NetworkMode
	}
	return ""
}

func (x *HostConfig) GetPrivileged() bool {
	if x != nil {
		return x.Privileged
	}
	return false
}

func (x *HostConfig) GetBinds() []string {
	if x != nil {
		return x.Binds
	}
	return nil
}

func (x *HostConfig) GetDns() []string {
	if x != nil {
		return x.Dns
	}
	return nil
}

type PortBinding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostIp        string                 `protobuf:"bytes,1,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	HostPort      string                 `protobuf:"bytes,2,opt,name=host_port,json=hostPort,proto3" json:"host_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortBinding) Reset() {
	*x = PortBinding{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortBinding) ProtoMessage() {}

func (x *PortBinding) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortBinding.ProtoReflect.Descriptor instead.
func (*PortBinding) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{14}
}

func (x *PortBinding) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *PortBinding) GetHostPort() string {
	if x != nil {
		return x.HostPort
	}
	return ""
}

type NetworkSettings struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Bridge                 string                 `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	SandboxId              string                 `protobuf:"bytes,2,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`
	HairpinMode            bool                   `protobuf:"varint,3,opt,name=hairpin_mode,json=hairpinMode,proto3" json:"hairpin_mode,omitempty"`
	LinkLocalIpv6Address   string                 `protobuf:"bytes,4,opt,name=link_local_ipv6_address,json=linkLocalIpv6Address,proto3" json:"link_local_ipv6_address,omitempty"`
	LinkLocalIpv6PrefixLen int32                  `protobuf:"varint,5,opt,name=link_local_ipv6_prefix_len,json=linkLocalIpv6PrefixLen,proto3" json:"link_local_ipv6_prefix_len,omitempty"`
	SandboxKey             string                 `protobuf:"bytes,6,opt,name=sandbox_key,json=sandboxKey,proto3" json:"sandbox_key,omitempty"`
	EndpointId             string                 `protobuf:"bytes,7,opt,name=endpoint_id,json=endpointId,proto3" json:"endpoint_id,omitempty"`
	Gateway                string                 `protobuf:"bytes,8,opt,name=gateway,proto3" json:"gateway,omitempty"`
	GlobalIpv6Address      string                 `protobuf:"bytes,9,opt,name=global_ipv6_address,json=globalIpv6Address,proto3" json:"global_ipv6_address,omitempty"`
	GlobalIpv6PrefixLen    int32                  `protobuf:"varint,10,opt,name=global_ipv6_prefix_len,json=globalIpv6PrefixLen,proto3" json:"global_ipv6_prefix_len,omitempty"`
	IpAddress              string                 `protobuf:"bytes,11,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	IpPrefixLen            int32                  `protobuf:"varint,12,opt,name=ip_prefix_len,json=ipPrefixLen,proto3" json:"ip_prefix_len,omitempty"`
	Ipv6Gateway            string                 `protobuf:"bytes,13,opt,name=ipv6_gateway,json=ipv6Gateway,proto3" json:"ipv6_gateway,omitempty"`
	MacAddress             string                 `protobuf:"bytes,14,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkSettings) Reset() {
	*x = NetworkSettings{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkSettings) ProtoMessage() {}

func (x *NetworkSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkSettings.ProtoReflect.Descriptor instead.
func (*NetworkSettings) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{15}
}

func (x *NetworkSettings) GetBridge() string {
	if x != nil {
		return x.Bridge
	}
	return ""
}

func (x *NetworkSettings) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

func (x *NetworkSettings) GetHairpinMode() bool {
	if x != nil {
		return x.HairpinMode
	}
	return false
}

func (x *NetworkSettings) GetLinkLocalIpv6Address() string {
	if x != nil {
		return x.LinkLocalIpv6Address
	}
	return ""
}

func (x *NetworkSettings) GetLinkLocalIpv6PrefixLen() int32 {
	if x != nil {
		return x.LinkLocalIpv6PrefixLen
	}
	return 0
}

func (x *NetworkSettings) GetSandboxKey() string {
	if x != nil {
		return x.SandboxKey
	}
	return ""
}

func (x *NetworkSettings) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

func (x *NetworkSettings) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *NetworkSettings) GetGlobalIpv6Address() string {
	if x != nil {
		return x.GlobalIpv6Address
	}
	return ""
}

func (x *NetworkSettings) GetGlobalIpv6PrefixLen() int32 {
	if x != nil {
		return x.GlobalIpv6PrefixLen
	}
	return 0
}

func (x *NetworkSettings) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NetworkSettings) GetIpPrefixLen() int32 {
	if x != nil {
		return x.IpPrefixLen
	}
	return 0
}

func (x *NetworkSettings) GetIpv6Gateway() string {
	if x != nil {
		return x.Ipv6Gateway
	}
	return ""
}

func (x *NetworkSettings) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

// Container lifecycle operations
type StartContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartContainerRequest) Reset() {
	*x = StartContainerRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContainerRequest) ProtoMessage() {}

func (x *StartContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContainerRequest.ProtoReflect.Descriptor instead.
func (*StartContainerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{16}
}

func (x *StartContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type StartContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartContainerResponse) Reset() {
	*x = StartContainerResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContainerResponse) ProtoMessage() {}

func (x *StartContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContainerResponse.ProtoReflect.Descriptor instead.
func (*StartContainerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{17}
}

func (x *StartContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Timeout       int32                  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"` // Stop timeout in seconds (default: 10)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopContainerRequest) Reset() {
	*x = StopContainerRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerRequest) ProtoMessage() {}

func (x *StopContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerRequest.ProtoReflect.Descriptor instead.
func (*StopContainerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{18}
}

func (x *StopContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *StopContainerRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type StopContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopContainerResponse) Reset() {
	*x = StopContainerResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerResponse) ProtoMessage() {}

func (x *StopContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerResponse.ProtoReflect.Descriptor instead.
func (*StopContainerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{19}
}

func (x *StopContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RestartContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Timeout       int32                  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartContainerRequest) Reset() {
	*x = RestartContainerRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartContainerRequest) ProtoMessage() {}

func (x *RestartContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartContainerRequest.ProtoReflect.Descriptor instead.
func (*RestartContainerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{20}
}

func (x *RestartContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *RestartContainerRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type RestartContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartContainerResponse) Reset() {
	*x = RestartContainerResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartContainerResponse) ProtoMessage() {}

func (x *RestartContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartContainerResponse.ProtoReflect.Descriptor instead.
func (*RestartContainerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{21}
}

func (x *RestartContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RestartContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PauseContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseContainerRequest) Reset() {
	*x = PauseContainerRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseContainerRequest) ProtoMessage() {}

func (x *PauseContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseContainerRequest.ProtoReflect.Descriptor instead.
func (*PauseContainerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{22}
}

func (x *PauseContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type PauseContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseContainerResponse) Reset() {
	*x = PauseContainerResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseContainerResponse) ProtoMessage() {}

func (x *PauseContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseContainerResponse.ProtoReflect.Descriptor instead.
func (*PauseContainerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{23}
}

func (x *PauseContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PauseContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UnpauseContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpauseContainerRequest) Reset() {
	*x = UnpauseContainerRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseContainerRequest) ProtoMessage() {}

func (x *UnpauseContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseContainerRequest.ProtoReflect.Descriptor instead.
func (*UnpauseContainerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{24}
}

func (x *UnpauseContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type UnpauseContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpauseContainerResponse) Reset() {
	*x = UnpauseContainerResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseContainerResponse) ProtoMessage() {}

func (x *UnpauseContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseContainerResponse.ProtoReflect.Descriptor instead.
func (*UnpauseContainerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{25}
}

func (x *UnpauseContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnpauseContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Force         bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`                                      // Force remove running container
	RemoveVolumes bool                   `protobuf:"varint,3,opt,name=remove_volumes,json=removeVolumes,proto3" json:"remove_volumes,omitempty"` // Remove associated volumes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteContainerRequest) Reset() {
	*x = DeleteContainerRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContainerRequest) ProtoMessage() {}

func (x *DeleteContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContainerRequest.ProtoReflect.Descriptor instead.
func (*DeleteContainerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *DeleteContainerRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *DeleteContainerRequest) GetRemoveVolumes() bool {
	if x != nil {
		return x.RemoveVolumes
	}
	return false
}

type DeleteContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteContainerResponse) Reset() {
	*x = DeleteContainerResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContainerResponse) ProtoMessage() {}

func (x *DeleteContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContainerResponse.ProtoReflect.Descriptor instead.
func (*DeleteContainerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Container stats (streaming)
type GetContainerStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Stream        bool                   `protobuf:"varint,2,opt,name=stream,proto3" json:"stream,omitempty"` // Continuous stream or one-shot
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerStatsRequest) Reset() {
	*x = GetContainerStatsRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerStatsRequest) ProtoMessage() {}

func (x *GetContainerStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerStatsRequest.ProtoReflect.Descriptor instead.
func (*GetContainerStatsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{28}
}

func (x *GetContainerStatsRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *GetContainerStatsRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

type ContainerStats struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	ContainerId string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Timestamp   int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// CPU stats
	CpuStats    *CPUStats `protobuf:"bytes,4,opt,name=cpu_stats,json=cpuStats,proto3" json:"cpu_stats,omitempty"`
	PrecpuStats *CPUStats `protobuf:"bytes,5,opt,name=precpu_stats,json=precpuStats,proto3" json:"precpu_stats,omitempty"`
	// Memory stats
	MemoryStats *MemoryStats `protobuf:"bytes,6,opt,name=memory_stats,json=memoryStats,proto3" json:"memory_stats,omitempty"`
	// Block I/O stats
	BlkioStats *BlkioStats `protobuf:"bytes,7,opt,name=blkio_stats,json=blkioStats,proto3" json:"blkio_stats,omitempty"`
	// Network stats
	Networks map[string]*NetworkStats `protobuf:"bytes,8,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// PIDs
	PidsStats     *PidsStats `protobuf:"bytes,9,opt,name=pids_stats,json=pidsStats,proto3" json:"pids_stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStats) Reset() {
	*x = ContainerStats{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStats) ProtoMessage() {}

func (x *ContainerStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStats.ProtoReflect.Descriptor instead.
func (*ContainerStats) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{29}
}

func (x *ContainerStats) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerStats) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ContainerStats) GetCpuStats() *CPUStats {
	if x != nil {
		return x.CpuStats
	}
	return nil
}

func (x *ContainerStats) GetPrecpuStats() *CPUStats {
	if x != nil {
		return x.PrecpuStats
	}
	return nil
}

func (x *ContainerStats) GetMemoryStats() *MemoryStats {
	if x != nil {
		return x.MemoryStats
	}
	return nil
}

func (x *ContainerStats) GetBlkioStats() *BlkioStats {
	if x != nil {
		return x.BlkioStats
	}
	return nil
}

func (x *ContainerStats) GetNetworks() map[string]*NetworkStats {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *ContainerStats) GetPidsStats() *PidsStats {
	if x != nil {
		return x.PidsStats
	}
	return nil
}

type CPUStats struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CpuUsageTotal        uint64                 `protobuf:"varint,1,opt,name=cpu_usage_total,json=cpuUsageTotal,proto3" json:"cpu_usage_total,omitempty"`
	CpuUsagePercpu       []uint64               `protobuf:"varint,2,rep,packed,name=cpu_usage_percpu,json=cpuUsagePercpu,proto3" json:"cpu_usage_percpu,omitempty"`
	CpuUsageInKernelmode uint64                 `protobuf:"varint,3,opt,name=cpu_usage_in_kernelmode,json=cpuUsageInKernelmode,proto3" json:"cpu_usage_in_kernelmode,omitempty"`
	CpuUsageInUsermode   uint64                 `protobuf:"varint,4,opt,name=cpu_usage_in_usermode,json=cpuUsageInUsermode,proto3" json:"cpu_usage_in_usermode,omitempty"`
	SystemCpuUsage       uint64                 `protobuf:"varint,5,opt,name=system_cpu_usage,json=systemCpuUsage,proto3" json:"system_cpu_usage,omitempty"`
	OnlineCpus           uint64                 `protobuf:"varint,6,opt,name=online_cpus,json=onlineCpus,proto3" json:"online_cpus,omitempty"`
	ThrottlingPeriods    uint64                 `protobuf:"varint,7,opt,name=throttling_periods,json=throttlingPeriods,proto3" json:"throttling_periods,omitempty"`
	ThrottledPeriods     uint64                 `protobuf:"varint,8,opt,name=throttled_periods,json=throttledPeriods,proto3" json:"throttled_periods,omitempty"`
	ThrottledTime        uint64                 `protobuf:"varint,9,opt,name=throttled_time,json=throttledTime,proto3" json:"throttled_time,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CPUStats) Reset() {
	*x = CPUStats{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUStats) ProtoMessage() {}

func (x *CPUStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUStats.ProtoReflect.Descriptor instead.
func (*CPUStats) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{30}
}

func (x *CPUStats) GetCpuUsageTotal() uint64 {
	if x != nil {
		return x.CpuUsageTotal
	}
	return 0
}

func (x *CPUStats) GetCpuUsagePercpu() []uint64 {
	if x != nil {
		return x.CpuUsagePercpu
	}
	return nil
}

func (x *CPUStats) GetCpuUsageInKernelmode() uint64 {
	if x != nil {
		return x.CpuUsageInKernelmode
	}
	return 0
}

func (x *CPUStats) GetCpuUsageInUsermode() uint64 {
	if x != nil {
		return x.CpuUsageInUsermode
	}
	return 0
}

func (x *CPUStats) GetSystemCpuUsage() uint64 {
	if x != nil {
		return x.SystemCpuUsage
	}
	return 0
}

func (x *CPUStats) GetOnlineCpus() uint64 {
	if x != nil {
		return x.OnlineCpus
	}
	return 0
}

func (x *CPUStats) GetThrottlingPeriods() uint64 {
	if x != nil {
		return x.ThrottlingPeriods
	}
	return 0
}

func (x *CPUStats) GetThrottledPeriods() uint64 {
	if x != nil {
		return x.ThrottledPeriods
	}
	return 0
}

func (x *CPUStats) GetThrottledTime() uint64 {
	if x != nil {
		return x.ThrottledTime
	}
	return 0
}

type MemoryStats struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Usage             uint64                 `protobuf:"varint,1,opt,name=usage,proto3" json:"usage,omitempty"`
	MaxUsage          uint64                 `protobuf:"varint,2,opt,name=max_usage,json=maxUsage,proto3" json:"max_usage,omitempty"`
	Limit             uint64                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Commit            uint64                 `protobuf:"varint,4,opt,name=commit,proto3" json:"commit,omitempty"`
	CommitPeak        uint64                 `protobuf:"varint,5,opt,name=commit_peak,json=commitPeak,proto3" json:"commit_peak,omitempty"`
	Privateworkingset uint64                 `protobuf:"varint,6,opt,name=privateworkingset,proto3" json:"privateworkingset,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MemoryStats) Reset() {
	*x = MemoryStats{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryStats) ProtoMessage() {}

func (x *MemoryStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryStats.ProtoReflect.Descriptor instead.
func (*MemoryStats) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{31}
}

func (x *MemoryStats) GetUsage() uint64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *MemoryStats) GetMaxUsage() uint64 {
	if x != nil {
		return x.MaxUsage
	}
	return 0
}

func (x *MemoryStats) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MemoryStats) GetCommit() uint64 {
	if x != nil {
		return x.Commit
	}
	return 0
}

func (x *MemoryStats) GetCommitPeak() uint64 {
	if x != nil {
		return x.CommitPeak
	}
	return 0
}

func (x *MemoryStats) GetPrivateworkingset() uint64 {
	if x != nil {
		return x.Privateworkingset
	}
	return 0
}

type BlkioStats struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	IoServiceBytesRecursive []*BlkioStatEntry      `protobuf:"bytes,1,rep,name=io_service_bytes_recursive,json=ioServiceBytesRecursive,proto3" json:"io_service_bytes_recursive,omitempty"`
	IoServicedRecursive     []*BlkioStatEntry      `protobuf:"bytes,2,rep,name=io_serviced_recursive,json=ioServicedRecursive,proto3" json:"io_serviced_recursive,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *BlkioStats) Reset() {
	*x = BlkioStats{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlkioStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlkioStats) ProtoMessage() {}

func (x *BlkioStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlkioStats.ProtoReflect.Descriptor instead.
func (*BlkioStats) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{32}
}

func (x *BlkioStats) GetIoServiceBytesRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoServiceBytesRecursive
	}
	return nil
}

func (x *BlkioStats) GetIoServicedRecursive() []*BlkioStatEntry {
	if x != nil {
		return x.IoServicedRecursive
	}
	return nil
}

type BlkioStatEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Major         uint64                 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor         uint64                 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Op            string                 `protobuf:"bytes,3,opt,name=op,proto3" json:"op,omitempty"`
	Value         uint64                 `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlkioStatEntry) Reset() {
	*x = BlkioStatEntry{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlkioStatEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlkioStatEntry) ProtoMessage() {}

func (x *BlkioStatEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlkioStatEntry.ProtoReflect.Descriptor instead.
func (*BlkioStatEntry) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{33}
}

func (x *BlkioStatEntry) GetMajor() uint64 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *BlkioStatEntry) GetMinor() uint64 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *BlkioStatEntry) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *BlkioStatEntry) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type NetworkStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RxBytes       uint64                 `protobuf:"varint,1,opt,name=rx_bytes,json=rxBytes,proto3" json:"rx_bytes,omitempty"`
	RxPackets     uint64                 `protobuf:"varint,2,opt,name=rx_packets,json=rxPackets,proto3" json:"rx_packets,omitempty"`
	RxErrors      uint64                 `protobuf:"varint,3,opt,name=rx_errors,json=rxErrors,proto3" json:"rx_errors,omitempty"`
	RxDropped     uint64                 `protobuf:"varint,4,opt,name=rx_dropped,json=rxDropped,proto3" json:"rx_dropped,omitempty"`
	TxBytes       uint64                 `protobuf:"varint,5,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes,omitempty"`
	TxPackets     uint64                 `protobuf:"varint,6,opt,name=tx_packets,json=txPackets,proto3" json:"tx_packets,omitempty"`
	TxErrors      uint64                 `protobuf:"varint,7,opt,name=tx_errors,json=txErrors,proto3" json:"tx_errors,omitempty"`
	TxDropped     uint64                 `protobuf:"varint,8,opt,name=tx_dropped,json=txDropped,proto3" json:"tx_dropped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{34}
}

func (x *NetworkStats) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *NetworkStats) GetRxPackets() uint64 {
	if x != nil {
		return x.RxPackets
	}
	return 0
}

func (x *NetworkStats) GetRxErrors() uint64 {
	if x != nil {
		return x.RxErrors
	}
	return 0
}

func (x *NetworkStats) GetRxDropped() uint64 {
	if x != nil {
		return x.RxDropped
	}
	return 0
}

func (x *NetworkStats) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *NetworkStats) GetTxPackets() uint64 {
	if x != nil {
		return x.TxPackets
	}
	return 0
}

func (x *NetworkStats) GetTxErrors() uint64 {
	if x != nil {
		return x.TxErrors
	}
	return 0
}

func (x *NetworkStats) GetTxDropped() uint64 {
	if x != nil {
		return x.TxDropped
	}
	return 0
}

type PidsStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       uint64                 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Limit         uint64                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PidsStats) Reset() {
	*x = PidsStats{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PidsStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PidsStats) ProtoMessage() {}

func (x *PidsStats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PidsStats.ProtoReflect.Descriptor instead.
func (*PidsStats) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{35}
}

func (x *PidsStats) GetCurrent() uint64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PidsStats) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Container logs (streaming)
type GetContainerLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Follow        bool                   `protobuf:"varint,2,opt,name=follow,proto3" json:"follow,omitempty"`         // Stream logs
	Stdout        bool                   `protobuf:"varint,3,opt,name=stdout,proto3" json:"stdout,omitempty"`         // Include stdout (default: true)
	Stderr        bool                   `protobuf:"varint,4,opt,name=stderr,proto3" json:"stderr,omitempty"`         // Include stderr (default: true)
	Since         int64                  `protobuf:"varint,5,opt,name=since,proto3" json:"since,omitempty"`           // Unix timestamp
	Until         int64                  `protobuf:"varint,6,opt,name=until,proto3" json:"until,omitempty"`           // Unix timestamp
	Timestamps    bool                   `protobuf:"varint,7,opt,name=timestamps,proto3" json:"timestamps,omitempty"` // Include timestamps
	Tail          string                 `protobuf:"bytes,8,opt,name=tail,proto3" json:"tail,omitempty"`              // Number of lines from end ("all" or "100")
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerLogsRequest) Reset() {
	*x = GetContainerLogsRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerLogsRequest) ProtoMessage() {}

func (x *GetContainerLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerLogsRequest.ProtoReflect.Descriptor instead.
func (*GetContainerLogsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{36}
}

func (x *GetContainerLogsRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *GetContainerLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *GetContainerLogsRequest) GetStdout() bool {
	if x != nil {
		return x.Stdout
	}
	return false
}

func (x *GetContainerLogsRequest) GetStderr() bool {
	if x != nil {
		return x.Stderr
	}
	return false
}

func (x *GetContainerLogsRequest) GetSince() int64 {
	if x != nil {
		return x.Since
	}
	return 0
}

func (x *GetContainerLogsRequest) GetUntil() int64 {
	if x != nil {
		return x.Until
	}
	return 0
}

func (x *GetContainerLogsRequest) GetTimestamps() bool {
	if x != nil {
		return x.Timestamps
	}
	return false
}

func (x *GetContainerLogsRequest) GetTail() string {
	if x != nil {
		return x.Tail
	}
	return ""
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Stream        string                 `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"` // stdout/stderr
	Log           string                 `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`       // Log line
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{37}
}

func (x *LogEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogEntry) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *LogEntry) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

// Container exec (bidirectional streaming)
type ExecRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*ExecRequest_Start
	//	*ExecRequest_Input
	//	*ExecRequest_Resize
	Request       isExecRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRequest.ProtoReflect.Descriptor instead.
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{38}
}

func (x *ExecRequest) GetRequest() isExecRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ExecRequest) GetStart() *ExecStart {
	if x != nil {
		if x, ok := x.Request.(*ExecRequest_Start); ok {
			return x.Start
		}
	}
	return nil
}

func (x *ExecRequest) GetInput() *ExecInput {
	if x != nil {
		if x, ok := x.Request.(*ExecRequest_Input); ok {
			return x.Input
		}
	}
	return nil
}

func (x *ExecRequest) GetResize() *ExecResize {
	if x != nil {
		if x, ok := x.Request.(*ExecRequest_Resize); ok {
			return x.Resize
		}
	}
	return nil
}

type isExecRequest_Request interface {
	isExecRequest_Request()
}

type ExecRequest_Start struct {
	Start *ExecStart `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type ExecRequest_Input struct {
	Input *ExecInput `protobuf:"bytes,2,opt,name=input,proto3,oneof"`
}

type ExecRequest_Resize struct {
	Resize *ExecResize `protobuf:"bytes,3,opt,name=resize,proto3,oneof"`
}

func (*ExecRequest_Start) isExecRequest_Request() {}

func (*ExecRequest_Input) isExecRequest_Request() {}

func (*ExecRequest_Resize) isExecRequest_Request() {}

type ExecStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Cmd           []string               `protobuf:"bytes,2,rep,name=cmd,proto3" json:"cmd,omitempty"`  // Command to execute (e.g., ["/bin/sh"])
	Tty           bool                   `protobuf:"varint,3,opt,name=tty,proto3" json:"tty,omitempty"` // Allocate TTY
	AttachStdin   bool                   `protobuf:"varint,4,opt,name=attach_stdin,json=attachStdin,proto3" json:"attach_stdin,omitempty"`
	AttachStdout  bool                   `protobuf:"varint,5,opt,name=attach_stdout,json=attachStdout,proto3" json:"attach_stdout,omitempty"`
	AttachStderr  bool                   `protobuf:"varint,6,opt,name=attach_stderr,json=attachStderr,proto3" json:"attach_stderr,omitempty"`
	Env           map[string]string      `protobuf:"bytes,7,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Environment variables
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecStart) Reset() {
	*x = ExecStart{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecStart) ProtoMessage() {}

func (x *ExecStart) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecStart.ProtoReflect.Descriptor instead.
func (*ExecStart) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{39}
}

func (x *ExecStart) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ExecStart) GetCmd() []string {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *ExecStart) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

func (x *ExecStart) GetAttachStdin() bool {
	if x != nil {
		return x.AttachStdin
	}
	return false
}

func (x *ExecStart) GetAttachStdout() bool {
	if x != nil {
		return x.AttachStdout
	}
	return false
}

func (x *ExecStart) GetAttachStderr() bool {
	if x != nil {
		return x.AttachStderr
	}
	return false
}

func (x *ExecStart) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

type ExecInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // stdin input
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecInput) Reset() {
	*x = ExecInput{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecInput) ProtoMessage() {}

func (x *ExecInput) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecInput.ProtoReflect.Descriptor instead.
func (*ExecInput) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{40}
}

func (x *ExecInput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExecResize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         uint32                 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`   // Terminal width
	Height        uint32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"` // Terminal height
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecResize) Reset() {
	*x = ExecResize{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecResize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResize) ProtoMessage() {}

func (x *ExecResize) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResize.ProtoReflect.Descriptor instead.
func (*ExecResize) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{41}
}

func (x *ExecResize) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ExecResize) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ExecResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*ExecResponse_Output
	//	*ExecResponse_Error
	//	*ExecResponse_Exit
	Response      isExecResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResponse.ProtoReflect.Descriptor instead.
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{42}
}

func (x *ExecResponse) GetResponse() isExecResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ExecResponse) GetOutput() *ExecOutput {
	if x != nil {
		if x, ok := x.Response.(*ExecResponse_Output); ok {
			return x.Output
		}
	}
	return nil
}

func (x *ExecResponse) GetError() *ExecError {
	if x != nil {
		if x, ok := x.Response.(*ExecResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *ExecResponse) GetExit() *ExecExit {
	if x != nil {
		if x, ok := x.Response.(*ExecResponse_Exit); ok {
			return x.Exit
		}
	}
	return nil
}

type isExecResponse_Response interface {
	isExecResponse_Response()
}

type ExecResponse_Output struct {
	Output *ExecOutput `protobuf:"bytes,1,opt,name=output,proto3,oneof"`
}

type ExecResponse_Error struct {
	Error *ExecError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type ExecResponse_Exit struct {
	Exit *ExecExit `protobuf:"bytes,3,opt,name=exit,proto3,oneof"`
}

func (*ExecResponse_Output) isExecResponse_Response() {}

func (*ExecResponse_Error) isExecResponse_Response() {}

func (*ExecResponse_Exit) isExecResponse_Response() {}

type ExecOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`     // stdout/stderr output
	Stream        string                 `protobuf:"bytes,2,opt,name=stream,proto3" json:"stream,omitempty"` // stdout/stderr
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecOutput) Reset() {
	*x = ExecOutput{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecOutput) ProtoMessage() {}

func (x *ExecOutput) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecOutput.ProtoReflect.Descriptor instead.
func (*ExecOutput) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{43}
}

func (x *ExecOutput) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExecOutput) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

type ExecError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecError) Reset() {
	*x = ExecError{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecError) ProtoMessage() {}

func (x *ExecError) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecError.ProtoReflect.Descriptor instead.
func (*ExecError) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{44}
}

func (x *ExecError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ExecExit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExitCode      int32                  `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecExit) Reset() {
	*x = ExecExit{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecExit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecExit) ProtoMessage() {}

func (x *ExecExit) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecExit.ProtoReflect.Descriptor instead.
func (*ExecExit) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{45}
}

func (x *ExecExit) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

// Image operations
type ListImagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	All           bool                   `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`        // Include intermediate images
	Filters       string                 `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"` // Docker filters in JSON format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesRequest) Reset() {
	*x = ListImagesRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesRequest) ProtoMessage() {}

func (x *ListImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesRequest.ProtoReflect.Descriptor instead.
func (*ListImagesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{46}
}

func (x *ListImagesRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

func (x *ListImagesRequest) GetFilters() string {
	if x != nil {
		return x.Filters
	}
	return ""
}

type ListImagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []*Image               `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImagesResponse) Reset() {
	*x = ListImagesResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImagesResponse) ProtoMessage() {}

func (x *ListImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImagesResponse.ProtoReflect.Descriptor instead.
func (*ListImagesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{47}
}

func (x *ListImagesResponse) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Image ID (short 12 chars)
	RepoTags      []string               `protobuf:"bytes,2,rep,name=repo_tags,json=repoTags,proto3" json:"repo_tags,omitempty"`
	RepoDigests   []string               `protobuf:"bytes,3,rep,name=repo_digests,json=repoDigests,proto3" json:"repo_digests,omitempty"`
	ParentId      string                 `protobuf:"bytes,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Created       int64                  `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
	Size          int64                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	VirtualSize   int64                  `protobuf:"varint,7,opt,name=virtual_size,json=virtualSize,proto3" json:"virtual_size,omitempty"`
	SharedSize    int64                  `protobuf:"varint,8,opt,name=shared_size,json=sharedSize,proto3" json:"shared_size,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Containers    int32                  `protobuf:"varint,10,opt,name=containers,proto3" json:"containers,omitempty"` // Number of containers using this image
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{48}
}

func (x *Image) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Image) GetRepoTags() []string {
	if x != nil {
		return x.RepoTags
	}
	return nil
}

func (x *Image) GetRepoDigests() []string {
	if x != nil {
		return x.RepoDigests
	}
	return nil
}

func (x *Image) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *Image) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Image) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Image) GetVirtualSize() int64 {
	if x != nil {
		return x.VirtualSize
	}
	return 0
}

func (x *Image) GetSharedSize() int64 {
	if x != nil {
		return x.SharedSize
	}
	return 0
}

func (x *Image) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Image) GetContainers() int32 {
	if x != nil {
		return x.Containers
	}
	return 0
}

type GetImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"` // Image ID or name:tag
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageRequest) Reset() {
	*x = GetImageRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageRequest) ProtoMessage() {}

func (x *GetImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageRequest.ProtoReflect.Descriptor instead.
func (*GetImageRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{49}
}

func (x *GetImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type GetImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         *ImageDetail           `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetImageResponse) Reset() {
	*x = GetImageResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageResponse) ProtoMessage() {}

func (x *GetImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageResponse.ProtoReflect.Descriptor instead.
func (*GetImageResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{50}
}

func (x *GetImageResponse) GetImage() *ImageDetail {
	if x != nil {
		return x.Image
	}
	return nil
}

type ImageDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RepoTags      []string               `protobuf:"bytes,2,rep,name=repo_tags,json=repoTags,proto3" json:"repo_tags,omitempty"`
	RepoDigests   []string               `protobuf:"bytes,3,rep,name=repo_digests,json=repoDigests,proto3" json:"repo_digests,omitempty"`
	Parent        string                 `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	Comment       string                 `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Created       int64                  `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	Container     string                 `protobuf:"bytes,7,opt,name=container,proto3" json:"container,omitempty"`
	Config        *ImageConfig           `protobuf:"bytes,8,opt,name=config,proto3" json:"config,omitempty"`
	DockerVersion string                 `protobuf:"bytes,9,opt,name=docker_version,json=dockerVersion,proto3" json:"docker_version,omitempty"`
	Author        string                 `protobuf:"bytes,10,opt,name=author,proto3" json:"author,omitempty"`
	Architecture  string                 `protobuf:"bytes,11,opt,name=architecture,proto3" json:"architecture,omitempty"`
	Os            string                 `protobuf:"bytes,12,opt,name=os,proto3" json:"os,omitempty"`
	Size          int64                  `protobuf:"varint,13,opt,name=size,proto3" json:"size,omitempty"`
	VirtualSize   int64                  `protobuf:"varint,14,opt,name=virtual_size,json=virtualSize,proto3" json:"virtual_size,omitempty"`
	RootFs        *RootFS                `protobuf:"bytes,15,opt,name=root_fs,json=rootFs,proto3" json:"root_fs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageDetail) Reset() {
	*x = ImageDetail{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageDetail) ProtoMessage() {}

func (x *ImageDetail) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageDetail.ProtoReflect.Descriptor instead.
func (*ImageDetail) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{51}
}

func (x *ImageDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ImageDetail) GetRepoTags() []string {
	if x != nil {
		return x.RepoTags
	}
	return nil
}

func (x *ImageDetail) GetRepoDigests() []string {
	if x != nil {
		return x.RepoDigests
	}
	return nil
}

func (x *ImageDetail) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *ImageDetail) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ImageDetail) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ImageDetail) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *ImageDetail) GetConfig() *ImageConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ImageDetail) GetDockerVersion() string {
	if x != nil {
		return x.DockerVersion
	}
	return ""
}

func (x *ImageDetail) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ImageDetail) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *ImageDetail) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ImageDetail) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ImageDetail) GetVirtualSize() int64 {
	if x != nil {
		return x.VirtualSize
	}
	return 0
}

func (x *ImageDetail) GetRootFs() *RootFS {
	if x != nil {
		return x.RootFs
	}
	return nil
}

type ImageConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Domainname    string                 `protobuf:"bytes,2,opt,name=domainname,proto3" json:"domainname,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Env           []string               `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
	Cmd           []string               `protobuf:"bytes,5,rep,name=cmd,proto3" json:"cmd,omitempty"`
	Image         string                 `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	Volumes       map[string]bool        `protobuf:"bytes,7,rep,name=volumes,proto3" json:"volumes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	WorkingDir    string                 `protobuf:"bytes,8,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`
	Entrypoint    []string               `protobuf:"bytes,9,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	ExposedPorts  map[string]bool        `protobuf:"bytes,10,rep,name=exposed_ports,json=exposedPorts,proto3" json:"exposed_ports,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Labels        map[string]string      `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageConfig) Reset() {
	*x = ImageConfig{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageConfig) ProtoMessage() {}

func (x *ImageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageConfig.ProtoReflect.Descriptor instead.
func (*ImageConfig) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{52}
}

func (x *ImageConfig) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ImageConfig) GetDomainname() string {
	if x != nil {
		return x.Domainname
	}
	return ""
}

func (x *ImageConfig) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ImageConfig) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ImageConfig) GetCmd() []string {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *ImageConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ImageConfig) GetVolumes() map[string]bool {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *ImageConfig) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *ImageConfig) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *ImageConfig) GetExposedPorts() map[string]bool {
	if x != nil {
		return x.ExposedPorts
	}
	return nil
}

func (x *ImageConfig) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type RootFS struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Layers        []string               `protobuf:"bytes,2,rep,name=layers,proto3" json:"layers,omitempty"`
	BaseLayer     string                 `protobuf:"bytes,3,opt,name=base_layer,json=baseLayer,proto3" json:"base_layer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RootFS) Reset() {
	*x = RootFS{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RootFS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootFS) ProtoMessage() {}

func (x *RootFS) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootFS.ProtoReflect.Descriptor instead.
func (*RootFS) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{53}
}

func (x *RootFS) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RootFS) GetLayers() []string {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *RootFS) GetBaseLayer() string {
	if x != nil {
		return x.BaseLayer
	}
	return ""
}

type DeleteImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageId       string                 `protobuf:"bytes,1,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Force         bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`                    // Force remove
	NoPrune       bool                   `protobuf:"varint,3,opt,name=no_prune,json=noPrune,proto3" json:"no_prune,omitempty"` // Don't delete untagged parents
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteImageRequest) Reset() {
	*x = DeleteImageRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageRequest) ProtoMessage() {}

func (x *DeleteImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteImageRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{54}
}

func (x *DeleteImageRequest) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *DeleteImageRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *DeleteImageRequest) GetNoPrune() bool {
	if x != nil {
		return x.NoPrune
	}
	return false
}

type DeleteImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deleted       []*ImageDeleteResponse `protobuf:"bytes,1,rep,name=deleted,proto3" json:"deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteImageResponse) Reset() {
	*x = DeleteImageResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageResponse) ProtoMessage() {}

func (x *DeleteImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageResponse.ProtoReflect.Descriptor instead.
func (*DeleteImageResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteImageResponse) GetDeleted() []*ImageDeleteResponse {
	if x != nil {
		return x.Deleted
	}
	return nil
}

type ImageDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Untagged      string                 `protobuf:"bytes,1,opt,name=untagged,proto3" json:"untagged,omitempty"`
	Deleted       string                 `protobuf:"bytes,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageDeleteResponse) Reset() {
	*x = ImageDeleteResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageDeleteResponse) ProtoMessage() {}

func (x *ImageDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageDeleteResponse.ProtoReflect.Descriptor instead.
func (*ImageDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{56}
}

func (x *ImageDeleteResponse) GetUntagged() string {
	if x != nil {
		return x.Untagged
	}
	return ""
}

func (x *ImageDeleteResponse) GetDeleted() string {
	if x != nil {
		return x.Deleted
	}
	return ""
}

type PullImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Image         string                 `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`                                   // Image name (e.g., "nginx:latest")
	RegistryAuth  string                 `protobuf:"bytes,2,opt,name=registry_auth,json=registryAuth,proto3" json:"registry_auth,omitempty"` // Base64 encoded auth config
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullImageRequest) Reset() {
	*x = PullImageRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullImageRequest) ProtoMessage() {}

func (x *PullImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullImageRequest.ProtoReflect.Descriptor instead.
func (*PullImageRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{57}
}

func (x *PullImageRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *PullImageRequest) GetRegistryAuth() string {
	if x != nil {
		return x.RegistryAuth
	}
	return ""
}

type PullImageProgress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`     // Status message
	Progress      string                 `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress,omitempty"` // Progress bar
	Current       int64                  `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`  // Current bytes
	Total         int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`      // Total bytes
	Id            string                 `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`             // Layer ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullImageProgress) Reset() {
	*x = PullImageProgress{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullImageProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullImageProgress) ProtoMessage() {}

func (x *PullImageProgress) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullImageProgress.ProtoReflect.Descriptor instead.
func (*PullImageProgress) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{58}
}

func (x *PullImageProgress) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PullImageProgress) GetProgress() string {
	if x != nil {
		return x.Progress
	}
	return ""
}

func (x *PullImageProgress) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PullImageProgress) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PullImageProgress) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TagImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"` // Source image
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"` // Target tag (repo:tag)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagImageRequest) Reset() {
	*x = TagImageRequest{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagImageRequest) ProtoMessage() {}

func (x *TagImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagImageRequest.ProtoReflect.Descriptor instead.
func (*TagImageRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{59}
}

func (x *TagImageRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *TagImageRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type TagImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagImageResponse) Reset() {
	*x = TagImageResponse{}
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagImageResponse) ProtoMessage() {}

func (x *TagImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_proto_docker_docker_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagImageResponse.ProtoReflect.Descriptor instead.
func (*TagImageResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP(), []int{60}
}

func (x *TagImageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TagImageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pkg_grpc_proto_docker_docker_proto protoreflect.FileDescriptor

const file_pkg_grpc_proto_docker_docker_proto_rawDesc = "" +
	"\n" +
	"\"pkg/grpc/proto/docker/docker.proto\x12\x06docker\"\x16\n" +
	"\x14GetDockerInfoRequest\"\xca\x04\n" +
	"\x15GetDockerInfoResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1f\n" +
	"\vapi_version\x18\x02 \x01(\tR\n" +
	"apiVersion\x12&\n" +
	"\x0fmin_api_version\x18\x03 \x01(\tR\rminApiVersion\x12\x1d\n" +
	"\n" +
	"git_commit\x18\x04 \x01(\tR\tgitCommit\x12\x1d\n" +
	"\n" +
	"go_version\x18\x05 \x01(\tR\tgoVersion\x12\x0e\n" +
	"\x02os\x18\x06 \x01(\tR\x02os\x12\x12\n" +
	"\x04arch\x18\a \x01(\tR\x04arch\x12%\n" +
	"\x0ekernel_version\x18\b \x01(\tR\rkernelVersion\x12%\n" +
	"\x0estorage_driver\x18\t \x01(\tR\rstorageDriver\x12\x1e\n" +
	"\n" +
	"containers\x18\n" +
	" \x01(\x05R\n" +
	"containers\x12-\n" +
	"\x12containers_running\x18\v \x01(\x05R\x11containersRunning\x12+\n" +
	"\x11containers_paused\x18\f \x01(\x05R\x10containersPaused\x12-\n" +
	"\x12containers_stopped\x18\r \x01(\x05R\x11containersStopped\x12\x16\n" +
	"\x06images\x18\x0e \x01(\x05R\x06images\x12\x1b\n" +
	"\tmem_total\x18\x0f \x01(\x03R\bmemTotal\x12\x13\n" +
	"\x05n_cpu\x18\x10 \x01(\x05R\x04nCpu\x12)\n" +
	"\x10operating_system\x18\x11 \x01(\tR\x0foperatingSystem\"\x8a\x01\n" +
	"\x15ListContainersRequest\x12\x10\n" +
	"\x03all\x18\x01 \x01(\bR\x03all\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x18\n" +
	"\afilters\x18\x03 \x01(\tR\afilters\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"\x92\x01\n" +
	"\x16ListContainersResponse\x121\n" +
	"\n" +
	"containers\x18\x01 \x03(\v2\x11.docker.ContainerR\n" +
	"containers\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"\xcd\x04\n" +
	"\tContainer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05names\x18\x02 \x03(\tR\x05names\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12\x19\n" +
	"\bimage_id\x18\x04 \x01(\tR\aimageId\x12\x18\n" +
	"\acommand\x18\x05 \x01(\tR\acommand\x12\x18\n" +
	"\acreated\x18\x06 \x01(\x03R\acreated\x12\x14\n" +
	"\x05state\x18\a \x01(\tR\x05state\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12\"\n" +
	"\x05ports\x18\t \x03(\v2\f.docker.PortR\x05ports\x125\n" +
	"\x06labels\x18\n" +
	" \x03(\v2\x1d.docker.Container.LabelsEntryR\x06labels\x12\x17\n" +
	"\asize_rw\x18\v \x01(\x03R\x06sizeRw\x12 \n" +
	"\fsize_root_fs\x18\f \x01(\x03R\n" +
	"sizeRootFs\x12%\n" +
	"\x06mounts\x18\r \x03(\v2\r.docker.MountR\x06mounts\x12;\n" +
	"\bnetworks\x18\x0e \x03(\v2\x1f.docker.Container.NetworksEntryR\bnetworks\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aR\n" +
	"\rNetworksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.docker.NetworkConfigR\x05value:\x028\x01\"n\n" +
	"\x04Port\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12!\n" +
	"\fprivate_port\x18\x02 \x01(\x05R\vprivatePort\x12\x1f\n" +
	"\vpublic_port\x18\x03 \x01(\x05R\n" +
	"publicPort\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\"\x9b\x01\n" +
	"\x05Mount\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12 \n" +
	"\vdestination\x18\x03 \x01(\tR\vdestination\x12\x12\n" +
	"\x04mode\x18\x04 \x01(\tR\x04mode\x12\x0e\n" +
	"\x02rw\x18\x05 \x01(\bR\x02rw\x12 \n" +
	"\vpropagation\x18\x06 \x01(\tR\vpropagation\"\xcd\x01\n" +
	"\rNetworkConfig\x12\x1d\n" +
	"\n" +
	"network_id\x18\x01 \x01(\tR\tnetworkId\x12\x1f\n" +
	"\vendpoint_id\x18\x02 \x01(\tR\n" +
	"endpointId\x12\x18\n" +
	"\agateway\x18\x03 \x01(\tR\agateway\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x04 \x01(\tR\tipAddress\x12\"\n" +
	"\rip_prefix_len\x18\x05 \x01(\x05R\vipPrefixLen\x12\x1f\n" +
	"\vmac_address\x18\x06 \x01(\tR\n" +
	"macAddress\"8\n" +
	"\x13GetContainerRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"M\n" +
	"\x14GetContainerResponse\x125\n" +
	"\tcontainer\x18\x01 \x01(\v2\x17.docker.ContainerDetailR\tcontainer\"\xa3\x04\n" +
	"\x0fContainerDetail\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acreated\x18\x02 \x01(\x03R\acreated\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x12\n" +
	"\x04args\x18\x04 \x03(\tR\x04args\x12,\n" +
	"\x05state\x18\x05 \x01(\v2\x16.docker.ContainerStateR\x05state\x12\x14\n" +
	"\x05image\x18\x06 \x01(\tR\x05image\x12\x12\n" +
	"\x04name\x18\a \x01(\tR\x04name\x12#\n" +
	"\rrestart_count\x18\b \x01(\x05R\frestartCount\x12/\n" +
	"\x06config\x18\t \x01(\v2\x17.docker.ContainerConfigR\x06config\x123\n" +
	"\vhost_config\x18\n" +
	" \x01(\v2\x12.docker.HostConfigR\n" +
	"hostConfig\x12W\n" +
	"\x10network_settings\x18\v \x03(\v2,.docker.ContainerDetail.NetworkSettingsEntryR\x0fnetworkSettings\x12%\n" +
	"\x06mounts\x18\f \x03(\v2\r.docker.MountR\x06mounts\x1a[\n" +
	"\x14NetworkSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.docker.NetworkSettingsR\x05value:\x028\x01\"\xb2\x02\n" +
	"\x0eContainerState\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\arunning\x18\x02 \x01(\bR\arunning\x12\x16\n" +
	"\x06paused\x18\x03 \x01(\bR\x06paused\x12\x1e\n" +
	"\n" +
	"restarting\x18\x04 \x01(\bR\n" +
	"restarting\x12\x1d\n" +
	"\n" +
	"oom_killed\x18\x05 \x01(\bR\toomKilled\x12\x12\n" +
	"\x04dead\x18\x06 \x01(\bR\x04dead\x12\x10\n" +
	"\x03pid\x18\a \x01(\x05R\x03pid\x12\x1b\n" +
	"\texit_code\x18\b \x01(\x05R\bexitCode\x12\x14\n" +
	"\x05error\x18\t \x01(\tR\x05error\x12\x1d\n" +
	"\n" +
	"started_at\x18\n" +
	" \x01(\tR\tstartedAt\x12\x1f\n" +
	"\vfinished_at\x18\v \x01(\tR\n" +
	"finishedAt\"\x9e\x06\n" +
	"\x0fContainerConfig\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1e\n" +
	"\n" +
	"domainname\x18\x02 \x01(\tR\n" +
	"domainname\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12!\n" +
	"\fattach_stdin\x18\x04 \x01(\bR\vattachStdin\x12#\n" +
	"\rattach_stdout\x18\x05 \x01(\bR\fattachStdout\x12#\n" +
	"\rattach_stderr\x18\x06 \x01(\bR\fattachStderr\x12N\n" +
	"\rexposed_ports\x18\a \x03(\v2).docker.ContainerConfig.ExposedPortsEntryR\fexposedPorts\x12\x10\n" +
	"\x03tty\x18\b \x01(\bR\x03tty\x12\x1d\n" +
	"\n" +
	"open_stdin\x18\t \x01(\bR\topenStdin\x12\x1d\n" +
	"\n" +
	"stdin_once\x18\n" +
	" \x01(\bR\tstdinOnce\x12\x10\n" +
	"\x03env\x18\v \x03(\tR\x03env\x12\x10\n" +
	"\x03cmd\x18\f \x03(\tR\x03cmd\x12\x14\n" +
	"\x05image\x18\r \x01(\tR\x05image\x12>\n" +
	"\avolumes\x18\x0e \x03(\v2$.docker.ContainerConfig.VolumesEntryR\avolumes\x12\x1f\n" +
	"\vworking_dir\x18\x0f \x01(\tR\n" +
	"workingDir\x12\x1e\n" +
	"\n" +
	"entrypoint\x18\x10 \x03(\tR\n" +
	"entrypoint\x12;\n" +
	"\x06labels\x18\x11 \x03(\v2#.docker.ContainerConfig.LabelsEntryR\x06labels\x1a?\n" +
	"\x11ExposedPortsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a:\n" +
	"\fVolumesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x02\n" +
	"\n" +
	"HostConfig\x12\x1d\n" +
	"\n" +
	"cpu_shares\x18\x01 \x01(\x03R\tcpuShares\x12\x16\n" +
	"\x06memory\x18\x02 \x01(\x03R\x06memory\x12#\n" +
	"\rcgroup_parent\x18\x03 \x01(\tR\fcgroupParent\x12!\n" +
	"\fblkio_weight\x18\x04 \x01(\x05R\vblkioWeight\x128\n" +
	"\rport_bindings\x18\x05 \x03(\v2\x13.docker.PortBindingR\fportBindings\x12%\n" +
	"\x0erestart_policy\x18\x06 \x01(\tR\rrestartPolicy\x12!\n" +
	"\fnetwork_mode\x18\a \x01(\tR\vnetworkMode\x12\x1e\n" +
	"\n" +
	"privileged\x18\b \x01(\bR\n" +
	"privileged\x12\x14\n" +
	"\x05binds\x18\t \x03(\tR\x05binds\x12\x10\n" +
	"\x03dns\x18\n" +
	" \x03(\tR\x03dns\"C\n" +
	"\vPortBinding\x12\x17\n" +
	"\ahost_ip\x18\x01 \x01(\tR\x06hostIp\x12\x1b\n" +
	"\thost_port\x18\x02 \x01(\tR\bhostPort\"\xa6\x04\n" +
	"\x0fNetworkSettings\x12\x16\n" +
	"\x06bridge\x18\x01 \x01(\tR\x06bridge\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x02 \x01(\tR\tsandboxId\x12!\n" +
	"\fhairpin_mode\x18\x03 \x01(\bR\vhairpinMode\x125\n" +
	"\x17link_local_ipv6_address\x18\x04 \x01(\tR\x14linkLocalIpv6Address\x12:\n" +
	"\x1alink_local_ipv6_prefix_len\x18\x05 \x01(\x05R\x16linkLocalIpv6PrefixLen\x12\x1f\n" +
	"\vsandbox_key\x18\x06 \x01(\tR\n" +
	"sandboxKey\x12\x1f\n" +
	"\vendpoint_id\x18\a \x01(\tR\n" +
	"endpointId\x12\x18\n" +
	"\agateway\x18\b \x01(\tR\agateway\x12.\n" +
	"\x13global_ipv6_address\x18\t \x01(\tR\x11globalIpv6Address\x123\n" +
	"\x16global_ipv6_prefix_len\x18\n" +
	" \x01(\x05R\x13globalIpv6PrefixLen\x12\x1d\n" +
	"\n" +
	"ip_address\x18\v \x01(\tR\tipAddress\x12\"\n" +
	"\rip_prefix_len\x18\f \x01(\x05R\vipPrefixLen\x12!\n" +
	"\fipv6_gateway\x18\r \x01(\tR\vipv6Gateway\x12\x1f\n" +
	"\vmac_address\x18\x0e \x01(\tR\n" +
	"macAddress\":\n" +
	"\x15StartContainerRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"L\n" +
	"\x16StartContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"S\n" +
	"\x14StopContainerRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x18\n" +
	"\atimeout\x18\x02 \x01(\x05R\atimeout\"K\n" +
	"\x15StopContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"V\n" +
	"\x17RestartContainerRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x18\n" +
	"\atimeout\x18\x02 \x01(\x05R\atimeout\"N\n" +
	"\x18RestartContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\":\n" +
	"\x15PauseContainerRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"L\n" +
	"\x16PauseContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"<\n" +
	"\x17UnpauseContainerRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\"N\n" +
	"\x18UnpauseContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"x\n" +
	"\x16DeleteContainerRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12%\n" +
	"\x0eremove_volumes\x18\x03 \x01(\bR\rremoveVolumes\"M\n" +
	"\x17DeleteContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"U\n" +
	"\x18GetContainerStatsRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x16\n" +
	"\x06stream\x18\x02 \x01(\bR\x06stream\"\xfd\x03\n" +
	"\x0eContainerStats\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12-\n" +
	"\tcpu_stats\x18\x04 \x01(\v2\x10.docker.CPUStatsR\bcpuStats\x123\n" +
	"\fprecpu_stats\x18\x05 \x01(\v2\x10.docker.CPUStatsR\vprecpuStats\x126\n" +
	"\fmemory_stats\x18\x06 \x01(\v2\x13.docker.MemoryStatsR\vmemoryStats\x123\n" +
	"\vblkio_stats\x18\a \x01(\v2\x12.docker.BlkioStatsR\n" +
	"blkioStats\x12@\n" +
	"\bnetworks\x18\b \x03(\v2$.docker.ContainerStats.NetworksEntryR\bnetworks\x120\n" +
	"\n" +
	"pids_stats\x18\t \x01(\v2\x11.docker.PidsStatsR\tpidsStats\x1aQ\n" +
	"\rNetworksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.docker.NetworkStatsR\x05value:\x028\x01\"\x94\x03\n" +
	"\bCPUStats\x12&\n" +
	"\x0fcpu_usage_total\x18\x01 \x01(\x04R\rcpuUsageTotal\x12(\n" +
	"\x10cpu_usage_percpu\x18\x02 \x03(\x04R\x0ecpuUsagePercpu\x125\n" +
	"\x17cpu_usage_in_kernelmode\x18\x03 \x01(\x04R\x14cpuUsageInKernelmode\x121\n" +
	"\x15cpu_usage_in_usermode\x18\x04 \x01(\x04R\x12cpuUsageInUsermode\x12(\n" +
	"\x10system_cpu_usage\x18\x05 \x01(\x04R\x0esystemCpuUsage\x12\x1f\n" +
	"\vonline_cpus\x18\x06 \x01(\x04R\n" +
	"onlineCpus\x12-\n" +
	"\x12throttling_periods\x18\a \x01(\x04R\x11throttlingPeriods\x12+\n" +
	"\x11throttled_periods\x18\b \x01(\x04R\x10throttledPeriods\x12%\n" +
	"\x0ethrottled_time\x18\t \x01(\x04R\rthrottledTime\"\xbd\x01\n" +
	"\vMemoryStats\x12\x14\n" +
	"\x05usage\x18\x01 \x01(\x04R\x05usage\x12\x1b\n" +
	"\tmax_usage\x18\x02 \x01(\x04R\bmaxUsage\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x04R\x05limit\x12\x16\n" +
	"\x06commit\x18\x04 \x01(\x04R\x06commit\x12\x1f\n" +
	"\vcommit_peak\x18\x05 \x01(\x04R\n" +
	"commitPeak\x12,\n" +
	"\x11privateworkingset\x18\x06 \x01(\x04R\x11privateworkingset\"\xad\x01\n" +
	"\n" +
	"BlkioStats\x12S\n" +
	"\x1aio_service_bytes_recursive\x18\x01 \x03(\v2\x16.docker.BlkioStatEntryR\x17ioServiceBytesRecursive\x12J\n" +
	"\x15io_serviced_recursive\x18\x02 \x03(\v2\x16.docker.BlkioStatEntryR\x13ioServicedRecursive\"b\n" +
	"\x0eBlkioStatEntry\x12\x14\n" +
	"\x05major\x18\x01 \x01(\x04R\x05major\x12\x14\n" +
	"\x05minor\x18\x02 \x01(\x04R\x05minor\x12\x0e\n" +
	"\x02op\x18\x03 \x01(\tR\x02op\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x04R\x05value\"\xfa\x01\n" +
	"\fNetworkStats\x12\x19\n" +
	"\brx_bytes\x18\x01 \x01(\x04R\arxBytes\x12\x1d\n" +
	"\n" +
	"rx_packets\x18\x02 \x01(\x04R\trxPackets\x12\x1b\n" +
	"\trx_errors\x18\x03 \x01(\x04R\brxErrors\x12\x1d\n" +
	"\n" +
	"rx_dropped\x18\x04 \x01(\x04R\trxDropped\x12\x19\n" +
	"\btx_bytes\x18\x05 \x01(\x04R\atxBytes\x12\x1d\n" +
	"\n" +
	"tx_packets\x18\x06 \x01(\x04R\ttxPackets\x12\x1b\n" +
	"\ttx_errors\x18\a \x01(\x04R\btxErrors\x12\x1d\n" +
	"\n" +
	"tx_dropped\x18\b \x01(\x04R\ttxDropped\";\n" +
	"\tPidsStats\x12\x18\n" +
	"\acurrent\x18\x01 \x01(\x04R\acurrent\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x04R\x05limit\"\xe4\x01\n" +
	"\x17GetContainerLogsRequest\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x16\n" +
	"\x06follow\x18\x02 \x01(\bR\x06follow\x12\x16\n" +
	"\x06stdout\x18\x03 \x01(\bR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x04 \x01(\bR\x06stderr\x12\x14\n" +
	"\x05since\x18\x05 \x01(\x03R\x05since\x12\x14\n" +
	"\x05until\x18\x06 \x01(\x03R\x05until\x12\x1e\n" +
	"\n" +
	"timestamps\x18\a \x01(\bR\n" +
	"timestamps\x12\x12\n" +
	"\x04tail\x18\b \x01(\tR\x04tail\"R\n" +
	"\bLogEntry\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x16\n" +
	"\x06stream\x18\x02 \x01(\tR\x06stream\x12\x10\n" +
	"\x03log\x18\x03 \x01(\tR\x03log\"\x9c\x01\n" +
	"\vExecRequest\x12)\n" +
	"\x05start\x18\x01 \x01(\v2\x11.docker.ExecStartH\x00R\x05start\x12)\n" +
	"\x05input\x18\x02 \x01(\v2\x11.docker.ExecInputH\x00R\x05input\x12,\n" +
	"\x06resize\x18\x03 \x01(\v2\x12.docker.ExecResizeH\x00R\x06resizeB\t\n" +
	"\arequest\"\xa5\x02\n" +
	"\tExecStart\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12\x10\n" +
	"\x03cmd\x18\x02 \x03(\tR\x03cmd\x12\x10\n" +
	"\x03tty\x18\x03 \x01(\bR\x03tty\x12!\n" +
	"\fattach_stdin\x18\x04 \x01(\bR\vattachStdin\x12#\n" +
	"\rattach_stdout\x18\x05 \x01(\bR\fattachStdout\x12#\n" +
	"\rattach_stderr\x18\x06 \x01(\bR\fattachStderr\x12,\n" +
	"\x03env\x18\a \x03(\v2\x1a.docker.ExecStart.EnvEntryR\x03env\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1f\n" +
	"\tExecInput\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\":\n" +
	"\n" +
	"ExecResize\x12\x14\n" +
	"\x05width\x18\x01 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\rR\x06height\"\x9b\x01\n" +
	"\fExecResponse\x12,\n" +
	"\x06output\x18\x01 \x01(\v2\x12.docker.ExecOutputH\x00R\x06output\x12)\n" +
	"\x05error\x18\x02 \x01(\v2\x11.docker.ExecErrorH\x00R\x05error\x12&\n" +
	"\x04exit\x18\x03 \x01(\v2\x10.docker.ExecExitH\x00R\x04exitB\n" +
	"\n" +
	"\bresponse\"8\n" +
	"\n" +
	"ExecOutput\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x16\n" +
	"\x06stream\x18\x02 \x01(\tR\x06stream\"%\n" +
	"\tExecError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"'\n" +
	"\bExecExit\x12\x1b\n" +
	"\texit_code\x18\x01 \x01(\x05R\bexitCode\"?\n" +
	"\x11ListImagesRequest\x12\x10\n" +
	"\x03all\x18\x01 \x01(\bR\x03all\x12\x18\n" +
	"\afilters\x18\x02 \x01(\tR\afilters\";\n" +
	"\x12ListImagesResponse\x12%\n" +
	"\x06images\x18\x01 \x03(\v2\r.docker.ImageR\x06images\"\xf4\x02\n" +
	"\x05Image\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\trepo_tags\x18\x02 \x03(\tR\brepoTags\x12!\n" +
	"\frepo_digests\x18\x03 \x03(\tR\vrepoDigests\x12\x1b\n" +
	"\tparent_id\x18\x04 \x01(\tR\bparentId\x12\x18\n" +
	"\acreated\x18\x05 \x01(\x03R\acreated\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x03R\x04size\x12!\n" +
	"\fvirtual_size\x18\a \x01(\x03R\vvirtualSize\x12\x1f\n" +
	"\vshared_size\x18\b \x01(\x03R\n" +
	"sharedSize\x121\n" +
	"\x06labels\x18\t \x03(\v2\x19.docker.Image.LabelsEntryR\x06labels\x12\x1e\n" +
	"\n" +
	"containers\x18\n" +
	" \x01(\x05R\n" +
	"containers\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\",\n" +
	"\x0fGetImageRequest\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\"=\n" +
	"\x10GetImageResponse\x12)\n" +
	"\x05image\x18\x01 \x01(\v2\x13.docker.ImageDetailR\x05image\"\xc7\x03\n" +
	"\vImageDetail\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\trepo_tags\x18\x02 \x03(\tR\brepoTags\x12!\n" +
	"\frepo_digests\x18\x03 \x03(\tR\vrepoDigests\x12\x16\n" +
	"\x06parent\x18\x04 \x01(\tR\x06parent\x12\x18\n" +
	"\acomment\x18\x05 \x01(\tR\acomment\x12\x18\n" +
	"\acreated\x18\x06 \x01(\x03R\acreated\x12\x1c\n" +
	"\tcontainer\x18\a \x01(\tR\tcontainer\x12+\n" +
	"\x06config\x18\b \x01(\v2\x13.docker.ImageConfigR\x06config\x12%\n" +
	"\x0edocker_version\x18\t \x01(\tR\rdockerVersion\x12\x16\n" +
	"\x06author\x18\n" +
	" \x01(\tR\x06author\x12\"\n" +
	"\farchitecture\x18\v \x01(\tR\farchitecture\x12\x0e\n" +
	"\x02os\x18\f \x01(\tR\x02os\x12\x12\n" +
	"\x04size\x18\r \x01(\x03R\x04size\x12!\n" +
	"\fvirtual_size\x18\x0e \x01(\x03R\vvirtualSize\x12'\n" +
	"\aroot_fs\x18\x0f \x01(\v2\x0e.docker.RootFSR\x06rootFs\"\xd1\x04\n" +
	"\vImageConfig\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1e\n" +
	"\n" +
	"domainname\x18\x02 \x01(\tR\n" +
	"domainname\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x10\n" +
	"\x03env\x18\x04 \x03(\tR\x03env\x12\x10\n" +
	"\x03cmd\x18\x05 \x03(\tR\x03cmd\x12\x14\n" +
	"\x05image\x18\x06 \x01(\tR\x05image\x12:\n" +
	"\avolumes\x18\a \x03(\v2 .docker.ImageConfig.VolumesEntryR\avolumes\x12\x1f\n" +
	"\vworking_dir\x18\b \x01(\tR\n" +
	"workingDir\x12\x1e\n" +
	"\n" +
	"entrypoint\x18\t \x03(\tR\n" +
	"entrypoint\x12J\n" +
	"\rexposed_ports\x18\n" +
	" \x03(\v2%.docker.ImageConfig.ExposedPortsEntryR\fexposedPorts\x127\n" +
	"\x06labels\x18\v \x03(\v2\x1f.docker.ImageConfig.LabelsEntryR\x06labels\x1a:\n" +
	"\fVolumesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a?\n" +
	"\x11ExposedPortsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"S\n" +
	"\x06RootFS\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06layers\x18\x02 \x03(\tR\x06layers\x12\x1d\n" +
	"\n" +
	"base_layer\x18\x03 \x01(\tR\tbaseLayer\"`\n" +
	"\x12DeleteImageRequest\x12\x19\n" +
	"\bimage_id\x18\x01 \x01(\tR\aimageId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12\x19\n" +
	"\bno_prune\x18\x03 \x01(\bR\anoPrune\"L\n" +
	"\x13DeleteImageResponse\x125\n" +
	"\adeleted\x18\x01 \x03(\v2\x1b.docker.ImageDeleteResponseR\adeleted\"K\n" +
	"\x13ImageDeleteResponse\x12\x1a\n" +
	"\buntagged\x18\x01 \x01(\tR\buntagged\x12\x18\n" +
	"\adeleted\x18\x02 \x01(\tR\adeleted\"M\n" +
	"\x10PullImageRequest\x12\x14\n" +
	"\x05image\x18\x01 \x01(\tR\x05image\x12#\n" +
	"\rregistry_auth\x18\x02 \x01(\tR\fregistryAuth\"\x87\x01\n" +
	"\x11PullImageProgress\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x02 \x01(\tR\bprogress\x12\x18\n" +
	"\acurrent\x18\x03 \x01(\x03R\acurrent\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x03R\x05total\x12\x0e\n" +
	"\x02id\x18\x05 \x01(\tR\x02id\"A\n" +
	"\x0fTagImageRequest\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\"F\n" +
	"\x10TagImageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\x94\n" +
	"\n" +
	"\rDockerService\x12L\n" +
	"\rGetDockerInfo\x12\x1c.docker.GetDockerInfoRequest\x1a\x1d.docker.GetDockerInfoResponse\x12O\n" +
	"\x0eListContainers\x12\x1d.docker.ListContainersRequest\x1a\x1e.docker.ListContainersResponse\x12I\n" +
	"\fGetContainer\x12\x1b.docker.GetContainerRequest\x1a\x1c.docker.GetContainerResponse\x12O\n" +
	"\x0eStartContainer\x12\x1d.docker.StartContainerRequest\x1a\x1e.docker.StartContainerResponse\x12L\n" +
	"\rStopContainer\x12\x1c.docker.StopContainerRequest\x1a\x1d.docker.StopContainerResponse\x12U\n" +
	"\x10RestartContainer\x12\x1f.docker.RestartContainerRequest\x1a .docker.RestartContainerResponse\x12O\n" +
	"\x0ePauseContainer\x12\x1d.docker.PauseContainerRequest\x1a\x1e.docker.PauseContainerResponse\x12U\n" +
	"\x10UnpauseContainer\x12\x1f.docker.UnpauseContainerRequest\x1a .docker.UnpauseContainerResponse\x12R\n" +
	"\x0fDeleteContainer\x12\x1e.docker.DeleteContainerRequest\x1a\x1f.docker.DeleteContainerResponse\x12O\n" +
	"\x11GetContainerStats\x12 .docker.GetContainerStatsRequest\x1a\x16.docker.ContainerStats0\x01\x12G\n" +
	"\x10GetContainerLogs\x12\x1f.docker.GetContainerLogsRequest\x1a\x10.docker.LogEntry0\x01\x12>\n" +
	"\rExecContainer\x12\x13.docker.ExecRequest\x1a\x14.docker.ExecResponse(\x010\x01\x12C\n" +
	"\n" +
	"ListImages\x12\x19.docker.ListImagesRequest\x1a\x1a.docker.ListImagesResponse\x12=\n" +
	"\bGetImage\x12\x17.docker.GetImageRequest\x1a\x18.docker.GetImageResponse\x12F\n" +
	"\vDeleteImage\x12\x1a.docker.DeleteImageRequest\x1a\x1b.docker.DeleteImageResponse\x12B\n" +
	"\tPullImage\x12\x18.docker.PullImageRequest\x1a\x19.docker.PullImageProgress0\x01\x12=\n" +
	"\bTagImage\x12\x17.docker.TagImageRequest\x1a\x18.docker.TagImageResponseB/Z-github.com/ysicing/tiga/pkg/grpc/proto/dockerb\x06proto3"

var (
	file_pkg_grpc_proto_docker_docker_proto_rawDescOnce sync.Once
	file_pkg_grpc_proto_docker_docker_proto_rawDescData []byte
)

func file_pkg_grpc_proto_docker_docker_proto_rawDescGZIP() []byte {
	file_pkg_grpc_proto_docker_docker_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_proto_docker_docker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_grpc_proto_docker_docker_proto_rawDesc), len(file_pkg_grpc_proto_docker_docker_proto_rawDesc)))
	})
	return file_pkg_grpc_proto_docker_docker_proto_rawDescData
}

var file_pkg_grpc_proto_docker_docker_proto_msgTypes = make([]protoimpl.MessageInfo, 73)
var file_pkg_grpc_proto_docker_docker_proto_goTypes = []any{
	(*GetDockerInfoRequest)(nil),     // 0: docker.GetDockerInfoRequest
	(*GetDockerInfoResponse)(nil),    // 1: docker.GetDockerInfoResponse
	(*ListContainersRequest)(nil),    // 2: docker.ListContainersRequest
	(*ListContainersResponse)(nil),   // 3: docker.ListContainersResponse
	(*Container)(nil),                // 4: docker.Container
	(*Port)(nil),                     // 5: docker.Port
	(*Mount)(nil),                    // 6: docker.Mount
	(*NetworkConfig)(nil),            // 7: docker.NetworkConfig
	(*GetContainerRequest)(nil),      // 8: docker.GetContainerRequest
	(*GetContainerResponse)(nil),     // 9: docker.GetContainerResponse
	(*ContainerDetail)(nil),          // 10: docker.ContainerDetail
	(*ContainerState)(nil),           // 11: docker.ContainerState
	(*ContainerConfig)(nil),          // 12: docker.ContainerConfig
	(*HostConfig)(nil),               // 13: docker.HostConfig
	(*PortBinding)(nil),              // 14: docker.PortBinding
	(*NetworkSettings)(nil),          // 15: docker.NetworkSettings
	(*StartContainerRequest)(nil),    // 16: docker.StartContainerRequest
	(*StartContainerResponse)(nil),   // 17: docker.StartContainerResponse
	(*StopContainerRequest)(nil),     // 18: docker.StopContainerRequest
	(*StopContainerResponse)(nil),    // 19: docker.StopContainerResponse
	(*RestartContainerRequest)(nil),  // 20: docker.RestartContainerRequest
	(*RestartContainerResponse)(nil), // 21: docker.RestartContainerResponse
	(*PauseContainerRequest)(nil),    // 22: docker.PauseContainerRequest
	(*PauseContainerResponse)(nil),   // 23: docker.PauseContainerResponse
	(*UnpauseContainerRequest)(nil),  // 24: docker.UnpauseContainerRequest
	(*UnpauseContainerResponse)(nil), // 25: docker.UnpauseContainerResponse
	(*DeleteContainerRequest)(nil),   // 26: docker.DeleteContainerRequest
	(*DeleteContainerResponse)(nil),  // 27: docker.DeleteContainerResponse
	(*GetContainerStatsRequest)(nil), // 28: docker.GetContainerStatsRequest
	(*ContainerStats)(nil),           // 29: docker.ContainerStats
	(*CPUStats)(nil),                 // 30: docker.CPUStats
	(*MemoryStats)(nil),              // 31: docker.MemoryStats
	(*BlkioStats)(nil),               // 32: docker.BlkioStats
	(*BlkioStatEntry)(nil),           // 33: docker.BlkioStatEntry
	(*NetworkStats)(nil),             // 34: docker.NetworkStats
	(*PidsStats)(nil),                // 35: docker.PidsStats
	(*GetContainerLogsRequest)(nil),  // 36: docker.GetContainerLogsRequest
	(*LogEntry)(nil),                 // 37: docker.LogEntry
	(*ExecRequest)(nil),              // 38: docker.ExecRequest
	(*ExecStart)(nil),                // 39: docker.ExecStart
	(*ExecInput)(nil),                // 40: docker.ExecInput
	(*ExecResize)(nil),               // 41: docker.ExecResize
	(*ExecResponse)(nil),             // 42: docker.ExecResponse
	(*ExecOutput)(nil),               // 43: docker.ExecOutput
	(*ExecError)(nil),                // 44: docker.ExecError
	(*ExecExit)(nil),                 // 45: docker.ExecExit
	(*ListImagesRequest)(nil),        // 46: docker.ListImagesRequest
	(*ListImagesResponse)(nil),       // 47: docker.ListImagesResponse
	(*Image)(nil),                    // 48: docker.Image
	(*GetImageRequest)(nil),          // 49: docker.GetImageRequest
	(*GetImageResponse)(nil),         // 50: docker.GetImageResponse
	(*ImageDetail)(nil),              // 51: docker.ImageDetail
	(*ImageConfig)(nil),              // 52: docker.ImageConfig
	(*RootFS)(nil),                   // 53: docker.RootFS
	(*DeleteImageRequest)(nil),       // 54: docker.DeleteImageRequest
	(*DeleteImageResponse)(nil),      // 55: docker.DeleteImageResponse
	(*ImageDeleteResponse)(nil),      // 56: docker.ImageDeleteResponse
	(*PullImageRequest)(nil),         // 57: docker.PullImageRequest
	(*PullImageProgress)(nil),        // 58: docker.PullImageProgress
	(*TagImageRequest)(nil),          // 59: docker.TagImageRequest
	(*TagImageResponse)(nil),         // 60: docker.TagImageResponse
	nil,                              // 61: docker.Container.LabelsEntry
	nil,                              // 62: docker.Container.NetworksEntry
	nil,                              // 63: docker.ContainerDetail.NetworkSettingsEntry
	nil,                              // 64: docker.ContainerConfig.ExposedPortsEntry
	nil,                              // 65: docker.ContainerConfig.VolumesEntry
	nil,                              // 66: docker.ContainerConfig.LabelsEntry
	nil,                              // 67: docker.ContainerStats.NetworksEntry
	nil,                              // 68: docker.ExecStart.EnvEntry
	nil,                              // 69: docker.Image.LabelsEntry
	nil,                              // 70: docker.ImageConfig.VolumesEntry
	nil,                              // 71: docker.ImageConfig.ExposedPortsEntry
	nil,                              // 72: docker.ImageConfig.LabelsEntry
}
var file_pkg_grpc_proto_docker_docker_proto_depIdxs = []int32{
	4,  // 0: docker.ListContainersResponse.containers:type_name -> docker.Container
	5,  // 1: docker.Container.ports:type_name -> docker.Port
	61, // 2: docker.Container.labels:type_name -> docker.Container.LabelsEntry
	6,  // 3: docker.Container.mounts:type_name -> docker.Mount
	62, // 4: docker.Container.networks:type_name -> docker.Container.NetworksEntry
	10, // 5: docker.GetContainerResponse.container:type_name -> docker.ContainerDetail
	11, // 6: docker.ContainerDetail.state:type_name -> docker.ContainerState
	12, // 7: docker.ContainerDetail.config:type_name -> docker.ContainerConfig
	13, // 8: docker.ContainerDetail.host_config:type_name -> docker.HostConfig
	63, // 9: docker.ContainerDetail.network_settings:type_name -> docker.ContainerDetail.NetworkSettingsEntry
	6,  // 10: docker.ContainerDetail.mounts:type_name -> docker.Mount
	64, // 11: docker.ContainerConfig.exposed_ports:type_name -> docker.ContainerConfig.ExposedPortsEntry
	65, // 12: docker.ContainerConfig.volumes:type_name -> docker.ContainerConfig.VolumesEntry
	66, // 13: docker.ContainerConfig.labels:type_name -> docker.ContainerConfig.LabelsEntry
	14, // 14: docker.HostConfig.port_bindings:type_name -> docker.PortBinding
	30, // 15: docker.ContainerStats.cpu_stats:type_name -> docker.CPUStats
	30, // 16: docker.ContainerStats.precpu_stats:type_name -> docker.CPUStats
	31, // 17: docker.ContainerStats.memory_stats:type_name -> docker.MemoryStats
	32, // 18: docker.ContainerStats.blkio_stats:type_name -> docker.BlkioStats
	67, // 19: docker.ContainerStats.networks:type_name -> docker.ContainerStats.NetworksEntry
	35, // 20: docker.ContainerStats.pids_stats:type_name -> docker.PidsStats
	33, // 21: docker.BlkioStats.io_service_bytes_recursive:type_name -> docker.BlkioStatEntry
	33, // 22: docker.BlkioStats.io_serviced_recursive:type_name -> docker.BlkioStatEntry
	39, // 23: docker.ExecRequest.start:type_name -> docker.ExecStart
	40, // 24: docker.ExecRequest.input:type_name -> docker.ExecInput
	41, // 25: docker.ExecRequest.resize:type_name -> docker.ExecResize
	68, // 26: docker.ExecStart.env:type_name -> docker.ExecStart.EnvEntry
	43, // 27: docker.ExecResponse.output:type_name -> docker.ExecOutput
	44, // 28: docker.ExecResponse.error:type_name -> docker.ExecError
	45, // 29: docker.ExecResponse.exit:type_name -> docker.ExecExit
	48, // 30: docker.ListImagesResponse.images:type_name -> docker.Image
	69, // 31: docker.Image.labels:type_name -> docker.Image.LabelsEntry
	51, // 32: docker.GetImageResponse.image:type_name -> docker.ImageDetail
	52, // 33: docker.ImageDetail.config:type_name -> docker.ImageConfig
	53, // 34: docker.ImageDetail.root_fs:type_name -> docker.RootFS
	70, // 35: docker.ImageConfig.volumes:type_name -> docker.ImageConfig.VolumesEntry
	71, // 36: docker.ImageConfig.exposed_ports:type_name -> docker.ImageConfig.ExposedPortsEntry
	72, // 37: docker.ImageConfig.labels:type_name -> docker.ImageConfig.LabelsEntry
	56, // 38: docker.DeleteImageResponse.deleted:type_name -> docker.ImageDeleteResponse
	7,  // 39: docker.Container.NetworksEntry.value:type_name -> docker.NetworkConfig
	15, // 40: docker.ContainerDetail.NetworkSettingsEntry.value:type_name -> docker.NetworkSettings
	34, // 41: docker.ContainerStats.NetworksEntry.value:type_name -> docker.NetworkStats
	0,  // 42: docker.DockerService.GetDockerInfo:input_type -> docker.GetDockerInfoRequest
	2,  // 43: docker.DockerService.ListContainers:input_type -> docker.ListContainersRequest
	8,  // 44: docker.DockerService.GetContainer:input_type -> docker.GetContainerRequest
	16, // 45: docker.DockerService.StartContainer:input_type -> docker.StartContainerRequest
	18, // 46: docker.DockerService.StopContainer:input_type -> docker.StopContainerRequest
	20, // 47: docker.DockerService.RestartContainer:input_type -> docker.RestartContainerRequest
	22, // 48: docker.DockerService.PauseContainer:input_type -> docker.PauseContainerRequest
	24, // 49: docker.DockerService.UnpauseContainer:input_type -> docker.UnpauseContainerRequest
	26, // 50: docker.DockerService.DeleteContainer:input_type -> docker.DeleteContainerRequest
	28, // 51: docker.DockerService.GetContainerStats:input_type -> docker.GetContainerStatsRequest
	36, // 52: docker.DockerService.GetContainerLogs:input_type -> docker.GetContainerLogsRequest
	38, // 53: docker.DockerService.ExecContainer:input_type -> docker.ExecRequest
	46, // 54: docker.DockerService.ListImages:input_type -> docker.ListImagesRequest
	49, // 55: docker.DockerService.GetImage:input_type -> docker.GetImageRequest
	54, // 56: docker.DockerService.DeleteImage:input_type -> docker.DeleteImageRequest
	57, // 57: docker.DockerService.PullImage:input_type -> docker.PullImageRequest
	59, // 58: docker.DockerService.TagImage:input_type -> docker.TagImageRequest
	1,  // 59: docker.DockerService.GetDockerInfo:output_type -> docker.GetDockerInfoResponse
	3,  // 60: docker.DockerService.ListContainers:output_type -> docker.ListContainersResponse
	9,  // 61: docker.DockerService.GetContainer:output_type -> docker.GetContainerResponse
	17, // 62: docker.DockerService.StartContainer:output_type -> docker.StartContainerResponse
	19, // 63: docker.DockerService.StopContainer:output_type -> docker.StopContainerResponse
	21, // 64: docker.DockerService.RestartContainer:output_type -> docker.RestartContainerResponse
	23, // 65: docker.DockerService.PauseContainer:output_type -> docker.PauseContainerResponse
	25, // 66: docker.DockerService.UnpauseContainer:output_type -> docker.UnpauseContainerResponse
	27, // 67: docker.DockerService.DeleteContainer:output_type -> docker.DeleteContainerResponse
	29, // 68: docker.DockerService.GetContainerStats:output_type -> docker.ContainerStats
	37, // 69: docker.DockerService.GetContainerLogs:output_type -> docker.LogEntry
	42, // 70: docker.DockerService.ExecContainer:output_type -> docker.ExecResponse
	47, // 71: docker.DockerService.ListImages:output_type -> docker.ListImagesResponse
	50, // 72: docker.DockerService.GetImage:output_type -> docker.GetImageResponse
	55, // 73: docker.DockerService.DeleteImage:output_type -> docker.DeleteImageResponse
	58, // 74: docker.DockerService.PullImage:output_type -> docker.PullImageProgress
	60, // 75: docker.DockerService.TagImage:output_type -> docker.TagImageResponse
	59, // [59:76] is the sub-list for method output_type
	42, // [42:59] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_pkg_grpc_proto_docker_docker_proto_init() }
func file_pkg_grpc_proto_docker_docker_proto_init() {
	if File_pkg_grpc_proto_docker_docker_proto != nil {
		return
	}
	file_pkg_grpc_proto_docker_docker_proto_msgTypes[38].OneofWrappers = []any{
		(*ExecRequest_Start)(nil),
		(*ExecRequest_Input)(nil),
		(*ExecRequest_Resize)(nil),
	}
	file_pkg_grpc_proto_docker_docker_proto_msgTypes[42].OneofWrappers = []any{
		(*ExecResponse_Output)(nil),
		(*ExecResponse_Error)(nil),
		(*ExecResponse_Exit)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_grpc_proto_docker_docker_proto_rawDesc), len(file_pkg_grpc_proto_docker_docker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   73,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_proto_docker_docker_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_proto_docker_docker_proto_depIdxs,
		MessageInfos:      file_pkg_grpc_proto_docker_docker_proto_msgTypes,
	}.Build()
	File_pkg_grpc_proto_docker_docker_proto = out.File
	file_pkg_grpc_proto_docker_docker_proto_goTypes = nil
	file_pkg_grpc_proto_docker_docker_proto_depIdxs = nil
}
